{"ast":null,"code":"var _jsxFileName = \"/home/cbellee/repos/github/cbellee/parent-child-test/src/components/QuoteDetailForm.js\";\nimport React, { useState, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport WindowInputs from './WindowInputs';\nimport { UpdateQuoteToLocalStorage, GetQuotesFromLocalStorage, GetPostCodeFromSuburb, GetSuburbList } from '../helpers/Helpers';\nimport { Segment, Form, Icon, Input, Button, Grid, Card, GridRow, GridColumn } from \"semantic-ui-react\";\nimport seedData from '../helpers/SeedData';\nimport PostCodeContext from './PostCodeContext';\nconst dateCreated = new Date().toISOString();\n\nconst QuoteDetailForm = ({\n  match\n}) => {\n  const {\n    params: {\n      quoteId\n    }\n  } = match;\n  let quotes = GetQuotesFromLocalStorage('quotes', seedData);\n  let quote = quotes.filter(quote => quote.id == quoteId)[0];\n  const postCodes = useContext(PostCodeContext)[0];\n  var stateName = \"NSW\";\n  var suburbs = GetSuburbList(postCodes, stateName);\n  const [quoteState, setQuoteState] = useState(quote);\n  const [windowState, setWindowState] = useState(quote.windows);\n\n  const handleQuoteChange = e => setQuoteState({ ...quoteState,\n    [e.target.name]: e.target.value\n  });\n\n  const handleSuburbChange = e => {\n    quoteState.windows = windowState;\n    var totalCost = 0;\n    quoteState.windows.map(window => {\n      totalCost = totalCost + parseInt(window.price);\n    });\n    quoteState.total = totalCost;\n  };\n\n  const handleTotalChange = e => setQuoteState({ ...quoteState,\n    total: quoteState.windows.map(window => {\n      window.price;\n    })\n  });\n\n  console.log(\"quoteId: \" + quoteId);\n  console.log(\"quote state: \" + JSON.stringify(quoteState.quote));\n  console.log(\"window state: \" + JSON.stringify(windowState));\n  const blankWindow = {\n    name: '',\n    width: '2400',\n    height: '1200',\n    panel: '2'\n  };\n\n  const addWindow = () => {\n    setWindowState([...windowState, { ...blankWindow\n    }]);\n  };\n\n  const [redirectToQuotes, setRedirectToQuotes] = useState(false);\n\n  const handleWindowChange = e => {\n    const updatedWindows = [...windowState];\n    console.log(JSON.stringify(updatedWindows));\n    updatedWindows[e.target.dataset.idx][e.target.className] = e.target.value;\n    setWindowState(updatedWindows);\n  };\n\n  const onSubmit = () => {\n    quoteState.windows = windowState;\n    var totalCost = 0;\n    quoteState.windows.map(window => {\n      totalCost = totalCost + parseInt(window.price);\n    });\n    quoteState.total = totalCost;\n    UpdateQuoteToLocalStorage('quotes', quoteState, seedData);\n    setRedirectToQuotes(true);\n  };\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, redirectToQuotes ? React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }) : null, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 3,\n    padded: \"vertically\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    label: \"First Name\",\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    value: quoteState.firstName,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    label: \"Last Name\",\n    type: \"text\",\n    name: \"lastName\",\n    id: \"lastName\",\n    value: quoteState.lastName,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    label: \"Email\",\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    value: quoteState.email,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(\"input\", {\n    label: \"Phone\",\n    type: \"text\",\n    name: \"phone\",\n    id: \"phone\",\n    value: quoteState.phone,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Street\"), React.createElement(\"input\", {\n    label: \"Street\",\n    type: \"text\",\n    name: \"street\",\n    id: \"street\",\n    value: quoteState.street,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Suburb\"), React.createElement(\"select\", {\n    label: \"Suburb\",\n    name: \"suburb\",\n    id: \"suburb\",\n    value: quoteState.suburb,\n    onChange: handleSuburbChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, suburbs.map(suburb => React.createElement(\"option\", {\n    key: suburb.text,\n    value: suburb.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, suburb.value))))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"PostCode\"), React.createElement(\"input\", {\n    label: \"Postcode\",\n    type: \"text\",\n    name: \"postCode\",\n    id: \"postCode\",\n    value: quoteState.postCode,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Total\"), React.createElement(\"input\", {\n    label: \"Totale\",\n    type: \"text\",\n    name: \"total\",\n    id: \"total\",\n    value: quoteState.total,\n    onChange: handleTotalChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Button, {\n    floated: \"left\",\n    icon: true,\n    labelPosition: \"left\",\n    color: \"blue\",\n    size: \"small\",\n    onClick: addWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), \" Add Window\")), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Button, {\n    floated: \"left\",\n    icon: true,\n    labelPosition: \"left\",\n    color: \"green\",\n    size: \"small\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }), \" Save Quote\"))), React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, windowState.map((val, idx) => React.createElement(WindowInputs, {\n    key: `window-${idx}`,\n    idx: idx,\n    windowState: windowState,\n    handleWindowChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  })))));\n};\n\nexport default QuoteDetailForm;","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/parent-child-test/src/components/QuoteDetailForm.js"],"names":["React","useState","useContext","Redirect","WindowInputs","UpdateQuoteToLocalStorage","GetQuotesFromLocalStorage","GetPostCodeFromSuburb","GetSuburbList","Segment","Form","Icon","Input","Button","Grid","Card","GridRow","GridColumn","seedData","PostCodeContext","dateCreated","Date","toISOString","QuoteDetailForm","match","params","quoteId","quotes","quote","filter","id","postCodes","stateName","suburbs","quoteState","setQuoteState","windowState","setWindowState","windows","handleQuoteChange","e","target","name","value","handleSuburbChange","totalCost","map","window","parseInt","price","total","handleTotalChange","console","log","JSON","stringify","blankWindow","width","height","panel","addWindow","redirectToQuotes","setRedirectToQuotes","handleWindowChange","updatedWindows","dataset","idx","className","onSubmit","firstName","lastName","email","phone","street","suburb","text","postCode","val"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport WindowInputs from './WindowInputs';\nimport { UpdateQuoteToLocalStorage, GetQuotesFromLocalStorage, GetPostCodeFromSuburb, GetSuburbList } from '../helpers/Helpers';\nimport { Segment, Form, Icon, Input, Button, Grid, Card, GridRow, GridColumn } from \"semantic-ui-react\";\nimport seedData from '../helpers/SeedData';\nimport PostCodeContext from './PostCodeContext';\n\nconst dateCreated = new Date().toISOString();\n\nconst QuoteDetailForm = ({ match }) => {\n    const {\n        params: { quoteId },\n    } = match;\n\n    let quotes = GetQuotesFromLocalStorage('quotes', seedData);\n    let quote = quotes.filter((quote) => quote.id == quoteId)[0];\n\n    const postCodes = useContext(PostCodeContext)[0];\n    var stateName = \"NSW\"\n    var suburbs = GetSuburbList(postCodes, stateName);\n\n    const [quoteState, setQuoteState] = useState(\n        quote,\n    );\n\n    const [windowState, setWindowState] = useState(\n        quote.windows,\n    );\n\n    const handleQuoteChange = (e) => setQuoteState({\n        ...quoteState,\n        [e.target.name]: e.target.value,\n    });\n\n    const handleSuburbChange = (e) => {\n        quoteState.windows = windowState;\n        var totalCost = 0;\n        quoteState.windows.map((window) => {\n            totalCost = totalCost + parseInt(window.price);\n        });\n        quoteState.total = totalCost;\n    } \n\n    const handleTotalChange = (e) => setQuoteState({\n        ...quoteState,\n        total: quoteState.windows.map((window => {\n            window.price;\n        }))\n    })\n\n    console.log(\"quoteId: \" + quoteId);\n    console.log(\"quote state: \" + JSON.stringify(quoteState.quote));\n    console.log(\"window state: \" + JSON.stringify(windowState));\n\n    const blankWindow = { name: '', width: '2400', height: '1200', panel: '2' };\n    const addWindow = () => {\n        setWindowState([...windowState, { ...blankWindow }]);\n    };\n\n    const [redirectToQuotes, setRedirectToQuotes] = useState(false);\n\n    const handleWindowChange = (e) => {\n        const updatedWindows = [...windowState];\n        console.log(JSON.stringify(updatedWindows));\n        updatedWindows[e.target.dataset.idx][e.target.className] = e.target.value;\n        setWindowState(updatedWindows);\n    };\n\n    const onSubmit = () => {\n        quoteState.windows = windowState;\n        var totalCost = 0;\n        quoteState.windows.map((window) => {\n            totalCost = totalCost + parseInt(window.price);\n        });\n        quoteState.total = totalCost;\n        UpdateQuoteToLocalStorage('quotes', quoteState, seedData);\n        setRedirectToQuotes(true);\n    }\n\n    return (\n        \n        <Form>\n            {redirectToQuotes ? <Redirect to=\"/\" /> : null}\n            <Segment>\n                <Grid columns={3} padded=\"vertically\">\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>First Name</label>\n                            <input\n                                label=\"First Name\"\n                                type=\"text\"\n                                name=\"firstName\"\n                                id=\"firstName\"\n                                value={quoteState.firstName}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Last Name</label>\n                            <input\n                                label=\"Last Name\"\n                                type=\"text\"\n                                name=\"lastName\"\n                                id=\"lastName\"\n                                value={quoteState.lastName}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Email</label>\n                            <input\n                                label=\"Email\"\n                                type=\"text\"\n                                name=\"email\"\n                                id=\"email\"\n                                value={quoteState.email}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Phone</label>\n                            <input\n                                label=\"Phone\"\n                                type=\"text\"\n                                name=\"phone\"\n                                id=\"phone\"\n                                value={quoteState.phone}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Street</label>\n                            <input\n                                label=\"Street\"\n                                type=\"text\"\n                                name=\"street\"\n                                id=\"street\"\n                                value={quoteState.street}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Suburb</label>\n                            <select\n                                label=\"Suburb\"\n                                name=\"suburb\"\n                                id=\"suburb\"\n                                value={quoteState.suburb}\n                                onChange={handleSuburbChange}>\n                                {suburbs.map((suburb) => <option key={suburb.text} value={suburb.value}>{suburb.value}</option>)}\n                            </select>\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>PostCode</label>\n                            <input\n                                label=\"Postcode\"\n                                type=\"text\"\n                                name=\"postCode\"\n                                id=\"postCode\"\n                                value={quoteState.postCode}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Total</label>\n                            <input\n                                label=\"Totale\"\n                                type=\"text\"\n                                name=\"total\"\n                                id=\"total\"\n                                value={quoteState.total}\n                                onChange={handleTotalChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Grid>\n                <Form.Field>\n                    <Button\n                        floated=\"left\"\n                        icon\n                        labelPosition=\"left\"\n                        color=\"blue\"\n                        size=\"small\"\n                        onClick={addWindow}>\n                        <Icon name=\"edit\" /> Add Window\n                        </Button>\n                </Form.Field>\n                <Form.Field>\n                    <Button\n                        floated=\"left\"\n                        icon\n                        labelPosition=\"left\"\n                        color=\"green\"\n                        size=\"small\"\n                        onClick={onSubmit}>\n                        <Icon name=\"edit\" /> Save Quote\n                        </Button>\n                </Form.Field>\n            </Grid>\n            <Grid columns={1}>\n                <Grid.Column>\n                    {\n                        windowState.map((val, idx) => (\n                            <WindowInputs\n                                key={`window-${idx}`}\n                                idx={idx}\n                                windowState={windowState}\n                                handleWindowChange={handleWindowChange}\n                            />\n                        ))\n                    }\n                </Grid.Column>\n            </Grid>\n        </Form >\n    );\n};\n\nexport default QuoteDetailForm;"]},"metadata":{},"sourceType":"module"}