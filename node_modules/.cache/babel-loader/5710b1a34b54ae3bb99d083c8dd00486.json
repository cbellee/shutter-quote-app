{"ast":null,"code":"var _jsxFileName = \"/home/cbellee/repos/github/cbellee/parent-child-test/src/WindowInputs.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst WindowInputs = ({\n  idx,\n  windowState,\n  handleWindowChange\n}) => {\n  const windowId = `name-${idx}`;\n  const width = `width-${idx}`;\n  const height = `height-${idx}`;\n  return React.createElement(\"div\", {\n    key: `window-${idx}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: windowId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, `Window #${idx + 1}`), React.createElement(\"input\", {\n    type: \"text\",\n    name: windowId,\n    \"data-idx\": idx,\n    id: windowId,\n    className: \"name\",\n    value: windowState[idx].name,\n    onChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: widthId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Width\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: widthId,\n    \"data-idx\": idx,\n    id: widthId,\n    className: \"width\",\n    value: windowState[idx].width,\n    onChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: heightId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Height\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: heightId,\n    \"data-idx\": idx,\n    id: heightId,\n    className: \"height\",\n    value: windowState[idx].height,\n    onChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nWindowInputs.propTypes = {\n  idx: PropTypes.number,\n  windowState: PropTypes.array,\n  handleWindowChange: PropTypes.func\n};\nexport default WindowInputs;","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/parent-child-test/src/WindowInputs.js"],"names":["React","PropTypes","WindowInputs","idx","windowState","handleWindowChange","windowId","width","height","name","widthId","heightId","propTypes","number","array","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,WAAP;AAAoBC,EAAAA;AAApB,CAAD,KAA8C;AAC/D,QAAMC,QAAQ,GAAI,QAAOH,GAAI,EAA7B;AACA,QAAMI,KAAK,GAAI,SAAQJ,GAAI,EAA3B;AACA,QAAMK,MAAM,GAAI,UAASL,GAAI,EAA7B;AACA,SACI;AAAK,IAAA,GAAG,EAAG,UAASA,GAAI,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAEG,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B,WAAUH,GAAG,GAAG,CAAE,EAA9C,CADJ,EAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAEG,QAFV;AAGI,gBAAUH,GAHd;AAII,IAAA,EAAE,EAAEG,QAJR;AAKI,IAAA,SAAS,EAAC,MALd;AAMI,IAAA,KAAK,EAAEF,WAAW,CAACD,GAAD,CAAX,CAAiBM,IAN5B;AAOI,IAAA,QAAQ,EAAEJ,kBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAWI;AAAO,IAAA,OAAO,EAAEK,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXJ,EAYI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAEA,OAFV;AAGI,gBAAUP,GAHd;AAII,IAAA,EAAE,EAAEO,OAJR;AAKI,IAAA,SAAS,EAAC,OALd;AAMI,IAAA,KAAK,EAAEN,WAAW,CAACD,GAAD,CAAX,CAAiBI,KAN5B;AAOI,IAAA,QAAQ,EAAEF,kBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAqBI;AAAO,IAAA,OAAO,EAAEM,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,EAsBI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAEA,QAFV;AAGI,gBAAUR,GAHd;AAII,IAAA,EAAE,EAAEQ,QAJR;AAKI,IAAA,SAAS,EAAC,QALd;AAMI,IAAA,KAAK,EAAEP,WAAW,CAACD,GAAD,CAAX,CAAiBK,MAN5B;AAOI,IAAA,QAAQ,EAAEH,kBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CADJ;AAkCH,CAtCD;;AAwCAH,YAAY,CAACU,SAAb,GAAyB;AACrBT,EAAAA,GAAG,EAAEF,SAAS,CAACY,MADM;AAErBT,EAAAA,WAAW,EAAEH,SAAS,CAACa,KAFF;AAGrBT,EAAAA,kBAAkB,EAAEJ,SAAS,CAACc;AAHT,CAAzB;AAMA,eAAeb,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst WindowInputs = ({ idx, windowState, handleWindowChange }) => {\n    const windowId = `name-${idx}`;\n    const width = `width-${idx}`;\n    const height = `height-${idx}`;\n    return (\n        <div key={`window-${idx}`}>\n            <label htmlFor={windowId}>{`Window #${idx + 1}`}</label>\n            <input\n                type=\"text\"\n                name={windowId}\n                data-idx={idx}\n                id={windowId}\n                className=\"name\"\n                value={windowState[idx].name}\n                onChange={handleWindowChange}\n            />\n            <label htmlFor={widthId}>Width</label>\n            <input\n                type=\"text\"\n                name={widthId}\n                data-idx={idx}\n                id={widthId}\n                className=\"width\"\n                value={windowState[idx].width}\n                onChange={handleWindowChange}\n            />\n            <label htmlFor={heightId}>Height</label>\n            <input\n                type=\"text\"\n                name={heightId}\n                data-idx={idx}\n                id={heightId}\n                className=\"height\"\n                value={windowState[idx].height}\n                onChange={handleWindowChange}\n            />\n        </div>\n    );\n};\n\nWindowInputs.propTypes = {\n    idx: PropTypes.number,\n    windowState: PropTypes.array,\n    handleWindowChange: PropTypes.func,\n};\n\nexport default WindowInputs;\n"]},"metadata":{},"sourceType":"module"}