{"ast":null,"code":"export function GetQuotesFromLocalStorage(quotesName, seedData) {\n  try {\n    var quotes = JSON.parse(localStorage.getItem(quotesName));\n\n    if (quotes === null) {\n      localStorage.setItem(quotesName, JSON.stringify(seedData));\n      console.log(\"setting local storage from 'seedData'\");\n      quotes = JSON.parse(localStorage.getItem(quotesName));\n    }\n\n    return quotes.quotres;\n  } catch (err) {\n    console.log(\"Error getting quotes from local storage: \\n\" + err);\n  }\n}\nexport function AddQuoteToLocalStorage(quotesName, quote, seedData) {\n  try {\n    var quotes = GetQuotesFromLocalStorage(quotesName, seedData);\n    var newId = GetNextAvailableId(quotes);\n    quote.id = newId;\n    console.log(\"Adding new quote with quoteId: \" + newId);\n    quotes.quotes.push(quote);\n    localStorage.setItem(quotesName, JSON.stringify(quotes));\n  } catch (err) {\n    console.log(\"Error adding quote to local storage: \\n\" + err);\n    return;\n  }\n}\nexport function RemoveQuoteFromLocalStorage(quotesName, quoteId) {\n  try {\n    var quotes = GetQuotesFromLocalStorage(quotesName);\n    var itemIndex = quotes.quotes.findIndex(x => x.id === quoteId);\n    console.log(\"Removing quoteId: \" + quoteId + \" at index :\" + itemIndex);\n    quotes.quotes.splice(itemIndex, 1);\n    localStorage.setItem(quotesName, JSON.stringify(quotes));\n  } catch (err) {\n    console.log(\"Error removing quote from local storage: \\n\" + err);\n    return;\n  }\n}\n\nfunction GetNextAvailableId(quotes) {\n  var ids = quotes.quotes.map(q => q.id);\n  ids.sort((a, b) => b - a);\n  var latestId = ids[0];\n  latestId++;\n  console.log(\"nextId: \" + latestId);\n  return latestId;\n}","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/parent-child-test/src/helpers/Helpers.js"],"names":["GetQuotesFromLocalStorage","quotesName","seedData","quotes","JSON","parse","localStorage","getItem","setItem","stringify","console","log","quotres","err","AddQuoteToLocalStorage","quote","newId","GetNextAvailableId","id","push","RemoveQuoteFromLocalStorage","quoteId","itemIndex","findIndex","x","splice","ids","map","q","sort","a","b","latestId"],"mappings":"AAAA,OAAO,SAASA,yBAAT,CAAmCC,UAAnC,EAA+CC,QAA/C,EAAyD;AAC5D,MAAI;AACA,QAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBN,UAArB,CAAX,CAAb;;AACA,QAAIE,MAAM,KAAK,IAAf,EAAqB;AACjBG,MAAAA,YAAY,CAACE,OAAb,CAAqBP,UAArB,EAAiCG,IAAI,CAACK,SAAL,CAAeP,QAAf,CAAjC;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACAR,MAAAA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBN,UAArB,CAAX,CAAT;AACH;;AACD,WAAOE,MAAM,CAACS,OAAd;AACH,GARD,CAQE,OAAOC,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,gDAAgDE,GAA5D;AACH;AACJ;AAED,OAAO,SAASC,sBAAT,CAAgCb,UAAhC,EAA4Cc,KAA5C,EAAmDb,QAAnD,EAA6D;AAChE,MAAI;AACA,QAAIC,MAAM,GAAGH,yBAAyB,CAACC,UAAD,EAAaC,QAAb,CAAtC;AACA,QAAIc,KAAK,GAAGC,kBAAkB,CAACd,MAAD,CAA9B;AACAY,IAAAA,KAAK,CAACG,EAAN,GAAWF,KAAX;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAoCK,KAAhD;AACAb,IAAAA,MAAM,CAACA,MAAP,CAAcgB,IAAd,CAAmBJ,KAAnB;AACAT,IAAAA,YAAY,CAACE,OAAb,CAAqBP,UAArB,EAAiCG,IAAI,CAACK,SAAL,CAAeN,MAAf,CAAjC;AACH,GAPD,CAOE,OAAOU,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAA4CE,GAAxD;AACA;AACH;AACJ;AAED,OAAO,SAASO,2BAAT,CAAqCnB,UAArC,EAAiDoB,OAAjD,EAA0D;AAC7D,MAAI;AACA,QAAIlB,MAAM,GAAGH,yBAAyB,CAACC,UAAD,CAAtC;AACA,QAAIqB,SAAS,GAAGnB,MAAM,CAACA,MAAP,CAAcoB,SAAd,CAAwBC,CAAC,IAAIA,CAAC,CAACN,EAAF,KAASG,OAAtC,CAAhB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBU,OAAvB,GAAiC,aAAjC,GAAiDC,SAA7D;AACAnB,IAAAA,MAAM,CAACA,MAAP,CAAcsB,MAAd,CAAqBH,SAArB,EAAgC,CAAhC;AACAhB,IAAAA,YAAY,CAACE,OAAb,CAAqBP,UAArB,EAAiCG,IAAI,CAACK,SAAL,CAAeN,MAAf,CAAjC;AACH,GAND,CAME,OAAOU,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,gDAAgDE,GAA5D;AACA;AACH;AACJ;;AAED,SAASI,kBAAT,CAA4Bd,MAA5B,EAAoC;AAChC,MAAIuB,GAAG,GAAGvB,MAAM,CAACA,MAAP,CAAcwB,GAAd,CAAkBC,CAAC,IAAIA,CAAC,CAACV,EAAzB,CAAV;AACAQ,EAAAA,GAAG,CAACG,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAGD,CAAvB;AACA,MAAIE,QAAQ,GAAGN,GAAG,CAAC,CAAD,CAAlB;AACAM,EAAAA,QAAQ;AACRtB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaqB,QAAzB;AACA,SAAOA,QAAP;AACH","sourcesContent":["export function GetQuotesFromLocalStorage(quotesName, seedData) {\n    try {\n        var quotes = JSON.parse(localStorage.getItem(quotesName));\n        if (quotes === null) {\n            localStorage.setItem(quotesName, JSON.stringify(seedData));\n            console.log(\"setting local storage from 'seedData'\");\n            quotes = JSON.parse(localStorage.getItem(quotesName));\n        }\n        return quotes.quotres;\n    } catch (err) {\n        console.log(\"Error getting quotes from local storage: \\n\" + err)\n    }\n}\n\nexport function AddQuoteToLocalStorage(quotesName, quote, seedData) {\n    try {\n        var quotes = GetQuotesFromLocalStorage(quotesName, seedData);\n        var newId = GetNextAvailableId(quotes);\n        quote.id = newId;\n        console.log(\"Adding new quote with quoteId: \" + newId);\n        quotes.quotes.push(quote);\n        localStorage.setItem(quotesName, JSON.stringify(quotes));\n    } catch (err) {\n        console.log(\"Error adding quote to local storage: \\n\" + err)\n        return;\n    }\n}\n\nexport function RemoveQuoteFromLocalStorage(quotesName, quoteId) {\n    try {\n        var quotes = GetQuotesFromLocalStorage(quotesName);\n        var itemIndex = quotes.quotes.findIndex(x => x.id === quoteId);\n        console.log(\"Removing quoteId: \" + quoteId + \" at index :\" + itemIndex);\n        quotes.quotes.splice(itemIndex, 1);\n        localStorage.setItem(quotesName, JSON.stringify(quotes));\n    } catch (err) {\n        console.log(\"Error removing quote from local storage: \\n\" + err)\n        return;\n    }\n}\n\nfunction GetNextAvailableId(quotes) {\n    var ids = quotes.quotes.map(q => q.id);\n    ids.sort((a, b) => b - a);\n    var latestId = ids[0]\n    latestId++;\n    console.log(\"nextId: \" + latestId);\n    return latestId;\n}\n"]},"metadata":{},"sourceType":"module"}