{"ast":null,"code":"var _jsxFileName = \"/home/cbellee/repos/github/cbellee/parent-child-test/src/components/QuoteTable.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Table, Button, Icon } from \"semantic-ui-react\";\nimport { GetQuotesFromLocalStorage, RemoveQuoteFromLocalStorage } from \"../helpers/Helpers\";\nimport seedData from '../helpers/SeedData';\nexport default function QuoteTable() {\n  var quotes = GetQuotesFromLocalStorage('quotes', seedData);\n  const [selectedId, setSelectedId] = useState();\n\n  if (!quotes || quotes === null || quotes === '') {\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"No Data Found...\");\n  }\n\n  const onRemoveQuote = () => {\n    RemoveQuoteFromLocalStorage('quotes', selectedId);\n    setSelectedId(null); // Clear selection\n  };\n\n  const onEditQuote = () => {\n    setSelectedId(null); // Clear selection\n  };\n\n  const rows = quotes.map(quote => React.createElement(Table.Row, {\n    key: quote.id,\n    onClick: () => setSelectedId(quote.id),\n    active: quote.id === selectedId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, quote.id), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, quote.dateCreated), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, quote.firstName, \" \", quote.lastName), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, quote.email), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, quote.windows.length), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"$\", quote.total)));\n  return React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Table, {\n    celled: true,\n    striped: true,\n    selectable: true,\n    sortable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Id\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Date Created\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Windows\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Price\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, rows), React.createElement(Table.Footer, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Table.HeaderCell, {\n    colSpan: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    floated: \"left\",\n    icon: true,\n    labelPosition: \"left\",\n    color: \"red\",\n    size: \"small\",\n    disabled: !selectedId,\n    onClick: onRemoveQuote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), \" Remove Quote\"), React.createElement(Link, {\n    to: `/quote/${selectedId}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Button, {\n    floated: \"left\",\n    icon: true,\n    labelPosition: \"left\",\n    color: \"green\",\n    size: \"small\",\n    disabled: !selectedId,\n    onClick: onEditQuote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), \" Edit Quote\")))))));\n}","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/parent-child-test/src/components/QuoteTable.js"],"names":["React","useState","Link","Segment","Table","Button","Icon","GetQuotesFromLocalStorage","RemoveQuoteFromLocalStorage","seedData","QuoteTable","quotes","selectedId","setSelectedId","onRemoveQuote","onEditQuote","rows","map","quote","id","dateCreated","firstName","lastName","email","windows","length","total"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Table, Button, Icon } from \"semantic-ui-react\";\nimport { GetQuotesFromLocalStorage, RemoveQuoteFromLocalStorage } from \"../helpers/Helpers\";\nimport seedData from '../helpers/SeedData';\n\nexport default function QuoteTable() {\n    var quotes = GetQuotesFromLocalStorage('quotes', seedData);\n    const [selectedId, setSelectedId] = useState();\n\n    if (!quotes || quotes === null || quotes === '') {\n        return (\n            <h2>No Data Found...</h2>\n        )\n    }\n\n    const onRemoveQuote = () => {\n        RemoveQuoteFromLocalStorage('quotes', selectedId)\n        setSelectedId(null); // Clear selection\n    };\n\n    const onEditQuote = () => {\n        setSelectedId(null); // Clear selection\n    };\n\n    const rows = quotes.map(quote => (\n        <Table.Row\n            key={quote.id}\n            onClick={() => setSelectedId(quote.id)}\n            active={quote.id === selectedId}>\n            <Table.Cell>{quote.id}</Table.Cell>\n            <Table.Cell>{quote.dateCreated}</Table.Cell>\n            <Table.Cell>{quote.firstName} {quote.lastName}</Table.Cell>\n            <Table.Cell>{quote.email}</Table.Cell>\n            <Table.Cell>{quote.windows.length}</Table.Cell>\n            <Table.Cell>${quote.total}</Table.Cell>\n        </Table.Row>\n    ));\n\n    return (\n        <Segment>\n            <Table celled striped selectable sortable>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Id</Table.HeaderCell>\n                        <Table.HeaderCell>Date Created</Table.HeaderCell>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Email</Table.HeaderCell>\n                        <Table.HeaderCell>Windows</Table.HeaderCell>\n                        <Table.HeaderCell>Price</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>{rows}</Table.Body>\n                <Table.Footer fullWidth>\n                    <Table.Row>\n                        <Table.HeaderCell />\n                        <Table.HeaderCell colSpan=\"6\">\n                            <Button\n                                floated=\"left\"\n                                icon\n                                labelPosition=\"left\"\n                                color=\"red\"\n                                size=\"small\"\n                                disabled={!selectedId}\n                                onClick={onRemoveQuote}>\n                                <Icon name=\"trash\" /> Remove Quote\n                            </Button>\n                            <Link to={`/quote/${selectedId}`}>\n                                <Button\n                                    floated=\"left\"\n                                    icon\n                                    labelPosition=\"left\"\n                                    color=\"green\"\n                                    size=\"small\"\n                                    disabled={!selectedId}\n                                    onClick={onEditQuote}>\n                                    <Icon name=\"edit\" /> Edit Quote\n                            </Button>\n                            </Link>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>\n            </Table>\n        </Segment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}