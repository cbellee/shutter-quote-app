{"ast":null,"code":"var _jsxFileName = \"/home/cbellee/repos/github/cbellee/parent-child-test/src/QuoteForm.js\";\nimport React, { useState } from 'react';\nimport WindowInputs from './WindowInputs';\nimport { Form, Input, Button, Grid, FormField } from \"semantic-ui-react\";\n\nconst QuoteForm = () => {\n  const [ownerState, setOwnerState] = useState({\n    owner: '',\n    description: ''\n  });\n\n  const handleOwnerChange = e => setOwnerState({ ...ownerState,\n    [e.target.name]: [e.target.value]\n  });\n\n  const blankWindow = {\n    width: '2400',\n    height: '1200'\n  };\n  const [windowState, setWindowState] = useState([{ ...blankWindow\n  }]);\n\n  const addWindow = () => {\n    setWindowState([...windowState, { ...blankWindow\n    }]);\n  };\n\n  const handleWindowChange = e => {\n    const updatedWindows = [...windowState];\n    updatedWindows[e.target.dataset.idx][e.target.className] = e.target.value;\n    setWindowState(updatedWindows);\n  };\n\n  const onSubmit = () => {\n    console.log(\"window state: \" + windowState);\n  };\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 2,\n    padded: \"vertically\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"Owner\",\n    type: \"text\",\n    name: \"owner\",\n    id: \"owner\",\n    value: ownerState.owner,\n    onChange: handleOwnerChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"Description\",\n    type: \"text\",\n    name: \"description\",\n    id: \"description\",\n    value: ownerState.description,\n    onChange: handleOwnerChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"button\",\n    value: \"Add New Window\",\n    onClick: addWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, windowState.map((val, idx) => React.createElement(WindowInputs, {\n    key: `window-${idx}`,\n    idx: idx,\n    windowState: windowState,\n    handleWindowChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })))), React.createElement(Input, {\n    type: \"submit\",\n    value: \"Add Quote\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }));\n};\n\nexport default QuoteForm;","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/parent-child-test/src/QuoteForm.js"],"names":["React","useState","WindowInputs","Form","Input","Button","Grid","FormField","QuoteForm","ownerState","setOwnerState","owner","description","handleOwnerChange","e","target","name","value","blankWindow","width","height","windowState","setWindowState","addWindow","handleWindowChange","updatedWindows","dataset","idx","className","onSubmit","console","log","map","val"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport WindowInputs from './WindowInputs';\nimport { Form, Input, Button, Grid, FormField } from \"semantic-ui-react\";\n\nconst QuoteForm = () => {\n    const [ownerState, setOwnerState] = useState({\n        owner: '',\n        description: '',\n    });\n\n    const handleOwnerChange = (e) => setOwnerState({\n        ...ownerState,\n        [e.target.name]: [e.target.value],\n    });\n\n    const blankWindow = { width: '2400', height: '1200' };\n    const [windowState, setWindowState] = useState([\n        { ...blankWindow },\n    ]);\n\n    const addWindow = () => {\n        setWindowState([...windowState, { ...blankWindow }]);\n    };\n\n    const handleWindowChange = (e) => {\n        const updatedWindows = [...windowState];\n        updatedWindows[e.target.dataset.idx][e.target.className] = e.target.value;\n        setWindowState(updatedWindows);\n    };\n\n    const onSubmit = () => {\n        console.log(\"window state: \" + windowState);\n    }\n\n    return (\n        <Form>\n            <Grid columns={2} padded=\"vertically\">\n                <Grid.Column>\n                    <Form.Field>\n                        <Input\n                            label=\"Owner\"\n                            type=\"text\"\n                            name=\"owner\"\n                            id=\"owner\"\n                            value={ownerState.owner}\n                            onChange={handleOwnerChange}\n                        />\n                    </Form.Field>\n                </Grid.Column>\n                <Grid.Column>\n                    <Form.Field>\n                        <Input\n                            label=\"Description\"\n                            type=\"text\"\n                            name=\"description\"\n                            id=\"description\"\n                            value={ownerState.description}\n                            onChange={handleOwnerChange}\n                        />\n                    </Form.Field>\n                </Grid.Column>\n                <Grid.Column>\n                    <Form.Field>\n                        <Input\n                            type=\"button\"\n                            value=\"Add New Window\"\n                            onClick={addWindow}\n                        />\n                    </Form.Field>\n                </Grid.Column>\n            </Grid>\n            <Grid columns={1}>\n                <Grid.Column>\n                    {\n                        windowState.map((val, idx) => (\n                            <WindowInputs\n                                key={`window-${idx}`}\n                                idx={idx}\n                                windowState={windowState}\n                                handleWindowChange={handleWindowChange}\n                            />\n                        ))\n                    }\n                </Grid.Column>\n            </Grid>\n            <Input type=\"submit\" value=\"Add Quote\" onClick={onSubmit} />\n        </Form>\n    );\n};\n\nexport default QuoteForm;"]},"metadata":{},"sourceType":"module"}