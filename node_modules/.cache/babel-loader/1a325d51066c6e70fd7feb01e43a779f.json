{"ast":null,"code":"var _jsxFileName = \"/home/cbellee/repos/github/cbellee/parent-child-test/src/QuoteForm.js\";\nimport React, { useState } from 'react';\nimport WindowInputs from './WindowInputs';\nimport { Form, Input, Button, Grid } from \"semantic-ui-react\";\n\nconst QuoteForm = () => {\n  const [quoteState, setQuoteState] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    street: '',\n    suburb: '',\n    city: '',\n    postCode: ''\n  });\n\n  const handleQuoteChange = e => setQuoteState({ ...quoteState,\n    [e.target.name]: [e.target.value]\n  });\n\n  const blankWindow = {\n    width: '2400',\n    height: '1200'\n  };\n  const [windowState, setWindowState] = useState([{ ...blankWindow\n  }]);\n\n  const addWindow = () => {\n    setWindowState([...windowState, { ...blankWindow\n    }]);\n  };\n\n  const handleWindowChange = e => {\n    const updatedWindows = [...windowState];\n    console.log(e.target);\n    updatedWindows[e.target.dataset.idx][e.target.className] = e.target.value;\n    setWindowState(updatedWindows);\n  };\n\n  const onSubmit = () => {\n    console.log(\"window state: \" + windowState);\n  };\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"First Name\",\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    value: quoteState.firstName,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"Last Name\",\n    type: \"text\",\n    name: \"lastName\",\n    id: \"lastName\",\n    value: quoteState.lastName,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"Email\",\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    value: quoteState.email,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"Phone\",\n    type: \"text\",\n    name: \"phone\",\n    id: \"phone\",\n    value: quoteState.phone,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"Suburb\",\n    type: \"text\",\n    name: \"suburb\",\n    id: \"suburb\",\n    value: quoteState.suburb,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"Street\",\n    type: \"text\",\n    name: \"street\",\n    id: \"street\",\n    value: quoteState.street,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"City\",\n    type: \"text\",\n    name: \"city\",\n    id: \"city\",\n    value: quoteState.city,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"Postcode\",\n    type: \"text\",\n    name: \"postCode\",\n    id: \"postCode\",\n    value: quoteState.postCode,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Input, {\n    type: \"button\",\n    value: \"Add Window\",\n    onClick: addWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    columns: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, windowState.map((val, idx) => React.createElement(WindowInputs, {\n    key: `window-${idx}`,\n    idx: idx,\n    windowState: windowState,\n    handleWindowChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"submit\",\n    value: \"Add Quote\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })))));\n};\n\nexport default QuoteForm;","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/parent-child-test/src/QuoteForm.js"],"names":["React","useState","WindowInputs","Form","Input","Button","Grid","QuoteForm","quoteState","setQuoteState","firstName","lastName","email","phone","street","suburb","city","postCode","handleQuoteChange","e","target","name","value","blankWindow","width","height","windowState","setWindowState","addWindow","handleWindowChange","updatedWindows","console","log","dataset","idx","className","onSubmit","map","val"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport WindowInputs from './WindowInputs';\nimport { Form, Input, Button, Grid } from \"semantic-ui-react\";\n\nconst QuoteForm = () => {\n    const [quoteState, setQuoteState] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        street: '',\n        suburb: '',\n        city: '',\n        postCode: ''\n    });\n\n    const handleQuoteChange = (e) => setQuoteState({\n        ...quoteState,\n        [e.target.name]: [e.target.value],\n    });\n\n    const blankWindow = { width: '2400', height: '1200' };\n    const [windowState, setWindowState] = useState([\n        { ...blankWindow },\n    ]);\n\n    const addWindow = () => {\n        setWindowState([...windowState, { ...blankWindow }]);\n    };\n\n    const handleWindowChange = (e) => {\n        const updatedWindows = [...windowState];\n        console.log(e.target);\n        updatedWindows[e.target.dataset.idx][e.target.className] = e.target.value;\n        setWindowState(updatedWindows);\n    };\n\n    const onSubmit = () => {\n        console.log(\"window state: \" + windowState);\n    }\n\n    return (\n        <Form>\n\n                        <Input\n                            label=\"First Name\"\n                            type=\"text\"\n                            name=\"firstName\"\n                            id=\"firstName\"\n                            value={quoteState.firstName}\n                            onChange={handleQuoteChange}\n                        />\n\n                        <Input\n                            label=\"Last Name\"\n                            type=\"text\"\n                            name=\"lastName\"\n                            id=\"lastName\"\n                            value={quoteState.lastName}\n                            onChange={handleQuoteChange}\n                        />\n\n                        <Input\n                            label=\"Email\"\n                            type=\"text\"\n                            name=\"email\"\n                            id=\"email\"\n                            value={quoteState.email}\n                            onChange={handleQuoteChange}\n                        />\n\n                        <Input\n                            label=\"Phone\"\n                            type=\"text\"\n                            name=\"phone\"\n                            id=\"phone\"\n                            value={quoteState.phone}\n                            onChange={handleQuoteChange}\n                        />\n\n                        <Input\n                            label=\"Suburb\"\n                            type=\"text\"\n                            name=\"suburb\"\n                            id=\"suburb\"\n                            value={quoteState.suburb}\n                            onChange={handleQuoteChange}\n                        />\n\n                        <Input\n                            label=\"Street\"\n                            type=\"text\"\n                            name=\"street\"\n                            id=\"street\"\n                            value={quoteState.street}\n                            onChange={handleQuoteChange}\n                        />\n\n                        <Input\n                            label=\"City\"\n                            type=\"text\"\n                            name=\"city\"\n                            id=\"city\"\n                            value={quoteState.city}\n                            onChange={handleQuoteChange}\n                        />\n\n                        <Input\n                            label=\"Postcode\"\n                            type=\"text\"\n                            name=\"postCode\"\n                            id=\"postCode\"\n                            value={quoteState.postCode}\n                            onChange={handleQuoteChange}\n                        />\n\n                        <Input\n                            type=\"button\"\n                            value=\"Add Window\"\n                            onClick={addWindow}\n                        />\n                  \n\n            <Grid columns={2}>\n                <Grid.Column>\n                    {\n                        windowState.map((val, idx) => (\n                            <WindowInputs\n                                key={`window-${idx}`}\n                                idx={idx}\n                                windowState={windowState}\n                                handleWindowChange={handleWindowChange}\n                            />\n                        ))\n                    }\n                </Grid.Column>\n                <Grid.Row>\n                    <Form.Field>\n                        <Input type=\"submit\" value=\"Add Quote\" onClick={onSubmit} />\n                    </Form.Field>\n                </Grid.Row>\n            </Grid>\n        </Form >\n    );\n};\n\nexport default QuoteForm;"]},"metadata":{},"sourceType":"module"}