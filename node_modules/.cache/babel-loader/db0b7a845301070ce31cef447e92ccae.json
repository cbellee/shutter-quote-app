{"ast":null,"code":"var _jsxFileName = \"/home/cbellee/repos/github/cbellee/parent-child-test/src/components/WindowInputs.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Form, Input, Label, Segment } from \"semantic-ui-react\";\nimport { getByDisplayValue } from '@testing-library/react';\n\nconst WindowInputs = ({\n  idx,\n  windowState,\n  handleWindowChange\n}) => {\n  const nameId = `name-${idx}`;\n  const widthId = `width-${idx}`;\n  const heightId = `height-${idx}`;\n  const panelId = `panel-${idx}`;\n  const materialId = `material-${idx}`;\n  const priceId = `price-${idx}`;\n  const notesId = `notes-${idx}`;\n  const materialData = [{\n    text: 'wood',\n    value: 'wood'\n  }, {\n    text: 'pvc',\n    value: 'pvc'\n  }];\n  var minPanels = 1;\n  var maxPanels = 4;\n  var defaultPanels = 2;\n  const panelData = [];\n  const items = [];\n  let itemList = [];\n\n  if (windowPanels.value === \"\") {\n    windowPanels.value = defaultPanels;\n  }\n\n  for (var i = 1; i <= maxPanels; i++) {\n    panelData.push({\n      text: i,\n      value: i\n    });\n  }\n\n  var res = ValidateWindowInputFields(windowHeight.value, windowWidth.value);\n  let widthRatio = res.width / displayWidth;\n  let newHeight = res.height / widthRatio;\n  var panelSpacing = displayWidth / windowPanels.value;\n\n  for (let i = 0; i < windowPanels.value - 1; i++) {\n    items.push(itemList[i]);\n  }\n\n  return React.createElement(\"div\", {\n    key: `window-${idx}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 3,\n    padded: \"vertically\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    name: nameId,\n    \"data-idx\": idx,\n    id: nameId,\n    className: \"name\",\n    value: windowState[idx].name,\n    onChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Panels\"), React.createElement(\"input\", {\n    name: panelId,\n    \"data-idx\": idx,\n    id: panelId,\n    className: \"panel\",\n    value: windowState[idx].panel,\n    onChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Width\"), React.createElement(\"input\", {\n    name: widthId,\n    \"data-idx\": idx,\n    id: widthId,\n    className: \"width\",\n    value: windowState[idx].width,\n    onChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Height\"), React.createElement(\"input\", {\n    name: heightId,\n    \"data-idx\": idx,\n    id: heightId,\n    className: \"height\",\n    value: windowState[idx].height,\n    onChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Material\"), React.createElement(\"select\", {\n    name: materialId,\n    \"data-idx\": idx,\n    id: materialId,\n    value: {\n      materialData\n    },\n    className: \"material\",\n    value: windowState[idx].material,\n    onChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"wood\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Wood\"), React.createElement(\"option\", {\n    value: \"pvc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Pvc\")))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"input\", {\n    name: priceId,\n    \"data-idx\": idx,\n    id: priceId,\n    className: \"panel\",\n    value: windowState[idx].price,\n    onChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"windowContainer\",\n    style: {\n      height: newHeight,\n      width: displayWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, items.map((value, index) => {\n    var pSpacing = panelSpacing * (index + 1) - (index + 1);\n    return React.createElement(\"div\", {\n      style: {\n        position: \"relative\",\n        left: pSpacing\n      },\n      key: index,\n      className: 'windowItem ' + value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    });\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"textArea\", {\n    name: notesId,\n    \"data-idx\": idx,\n    id: notesId,\n    className: \"notes\",\n    value: windowState[idx].notes,\n    onChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }));\n};\n\nWindowInputs.propTypes = {\n  idx: PropTypes.number,\n  windowState: PropTypes.array,\n  handleWindowChange: PropTypes.func\n};\nexport default WindowInputs;","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/parent-child-test/src/components/WindowInputs.js"],"names":["React","PropTypes","Grid","Form","Input","Label","Segment","getByDisplayValue","WindowInputs","idx","windowState","handleWindowChange","nameId","widthId","heightId","panelId","materialId","priceId","notesId","materialData","text","value","minPanels","maxPanels","defaultPanels","panelData","items","itemList","windowPanels","i","push","res","ValidateWindowInputFields","windowHeight","windowWidth","widthRatio","width","displayWidth","newHeight","height","panelSpacing","name","panel","material","price","map","index","pSpacing","position","left","notes","propTypes","number","array","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Form, Input, Label, Segment } from \"semantic-ui-react\";\nimport { getByDisplayValue } from '@testing-library/react';\n\nconst WindowInputs = ({ idx, windowState, handleWindowChange }) => {\n    const nameId = `name-${idx}`;\n    const widthId = `width-${idx}`;\n    const heightId = `height-${idx}`;\n    const panelId = `panel-${idx}`;\n    const materialId = `material-${idx}`;\n    const priceId = `price-${idx}`;\n    const notesId = `notes-${idx}`;\n    const materialData = [{ text: 'wood', value: 'wood' }, { text: 'pvc', value: 'pvc' }];\n\n    var minPanels = 1;\n    var maxPanels = 4;\n    var defaultPanels = 2;\n    const panelData = [];\n    const items = [];\n    let itemList = [];\n\n    if (windowPanels.value === \"\") {\n        windowPanels.value = defaultPanels;\n    }\n\n    for (var i = 1; i <= maxPanels; i++) {\n        panelData.push({ text: i, value: i });\n    }\n\n    var res = ValidateWindowInputFields(windowHeight.value, windowWidth.value)\n\n    let widthRatio = res.width / displayWidth;\n    let newHeight = res.height / widthRatio;\n    var panelSpacing = displayWidth / windowPanels.value;\n\n    for (let i = 0; i < windowPanels.value - 1; i++) {\n        items.push(itemList[i]);\n    }\n\n    return (\n        <div key={`window-${idx}`}>\n            <Segment>\n                <Grid columns={3} padded=\"vertically\">\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Name</label>\n                            <input\n                                name={nameId}\n                                data-idx={idx}\n                                id={nameId}\n                                className=\"name\"\n                                value={windowState[idx].name}\n                                onChange={handleWindowChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field >\n                            <label>Panels</label>\n                            <input\n                                name={panelId}\n                                data-idx={idx}\n                                id={panelId}\n                                className=\"panel\"\n                                value={windowState[idx].panel}\n                                onChange={handleWindowChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Width</label>\n                            <input\n                                name={widthId}\n                                data-idx={idx}\n                                id={widthId}\n                                className=\"width\"\n                                value={windowState[idx].width}\n                                onChange={handleWindowChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field >\n                            <label>Height</label>\n                            <input\n                                name={heightId}\n                                data-idx={idx}\n                                id={heightId}\n                                className=\"height\"\n                                value={windowState[idx].height}\n                                onChange={handleWindowChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field >\n                            <label>Material</label>\n                            <select\n                                name={materialId}\n                                data-idx={idx}\n                                id={materialId}\n                                value={{ materialData }}\n                                className=\"material\"\n                                value={windowState[idx].material}\n                                onChange={handleWindowChange}>\n                                <option value=\"wood\">Wood</option>\n                                <option value=\"pvc\">Pvc</option>\n                            </select>\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field >\n                            <label>Price</label>\n                            <input\n                                name={priceId}\n                                data-idx={idx}\n                                id={priceId}\n                                className=\"panel\"\n                                value={windowState[idx].price}\n                                onChange={handleWindowChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Row>\n                        <div id=\"windowContainer\" style={{ height: newHeight, width: displayWidth }}>\n                            {items.map((value, index) => {\n                                var pSpacing = (panelSpacing * (index + 1) - ((index + 1)));\n                                return <div style={{ position: \"relative\", left: pSpacing }} key={index} className={'windowItem ' + value}>\n                                </div>\n                            })}\n                        </div>\n                    </Grid.Row>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Notes</label>\n                            <textArea\n                                name={notesId}\n                                data-idx={idx}\n                                id={notesId}\n                                className=\"notes\"\n                                value={windowState[idx].notes}\n                                onChange={handleWindowChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <br />\n        </div >\n    );\n};\n\nWindowInputs.propTypes = {\n    idx: PropTypes.number,\n    windowState: PropTypes.array,\n    handleWindowChange: PropTypes.func,\n};\n\nexport default WindowInputs;\n"]},"metadata":{},"sourceType":"module"}