{"ast":null,"code":"import _defineProperty from\"/home/cbellee/repos/github/cbellee/shutter-quote-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React from'react';import{Button,Icon,Grid,Form,Input,Label,Segment}from\"semantic-ui-react\";import'./window.css';var WindowInputs=function WindowInputs(_ref){var _React$createElement;var idx=_ref.idx,windowState=_ref.windowState,handleWindowChange=_ref.handleWindowChange,handleWindowRemove=_ref.handleWindowRemove;var nameId=\"name-\".concat(idx);var widthId=\"width-\".concat(idx);var heightId=\"height-\".concat(idx);var panelId=\"panel-\".concat(idx);var materialId=\"material-\".concat(idx);var priceId=\"price-\".concat(idx);var notesId=\"notes-\".concat(idx);var materialData=[{text:'wood',value:'wood'},{text:'pvc',value:'pvc'}];var minHeight=300;var minWidth=500;var maxHeight=10000;var maxWidth=10000;var displayWidth=600;var maxPanels=4;var panelData=[];var items=[];var itemList=[];function ValidateWindowInputFields(height,width){var h=height;var w=width;if(height===\"\"||height<minHeight){h=minHeight;}if(height>maxHeight){h=maxHeight;}if(width===\"\"||width<minWidth){w=minWidth;}if(width>maxWidth){w=maxWidth;}return{height:h,width:w};}for(var i=1;i<=maxPanels;i++){panelData.push({text:i,value:i});}var res=ValidateWindowInputFields(windowState[idx].height,windowState[idx].width);var widthRatio=res.width/displayWidth;var newHeight=res.height/widthRatio;var panelSpacing=displayWidth/windowState[idx].panel;console.log(\"window state \"+JSON.stringify(windowState[idx]));for(var _i=0;_i<windowState[idx].panel-1;_i++){items.push(itemList[_i]);}return React.createElement(\"div\",{key:\"window-\".concat(idx)},React.createElement(Segment,null,React.createElement(Grid,{columns:3,padded:\"vertically\"},React.createElement(Grid.Column,null,React.createElement(Form.Field,null,React.createElement(\"label\",null,\"Name\"),React.createElement(\"input\",{name:nameId,\"data-idx\":idx,id:nameId,className:\"name\",value:windowState[idx].name,onChange:handleWindowChange}))),React.createElement(Grid.Column,null,React.createElement(Form.Field,null,React.createElement(\"label\",null,\"Height (mm)\"),React.createElement(\"input\",{name:heightId,\"data-idx\":idx,id:heightId,className:\"height\",value:windowState[idx].height,onChange:handleWindowChange}))),React.createElement(Grid.Column,null,React.createElement(Form.Field,null,React.createElement(\"label\",null,\"Width (mm)\"),React.createElement(\"input\",{name:widthId,\"data-idx\":idx,id:widthId,className:\"width\",value:windowState[idx].width,onChange:handleWindowChange}))),React.createElement(Grid.Column,null,React.createElement(Form.Field,null,React.createElement(\"label\",null,\"Number of Shutters\"),React.createElement(\"input\",{type:\"number\",min:2,max:4,name:panelId,\"data-idx\":idx,id:panelId,className:\"panel\",value:windowState[idx].panel,onChange:handleWindowChange}))),React.createElement(Grid.Column,null,React.createElement(Form.Field,null,React.createElement(\"label\",{className:\"material\"},\"Material\"),React.createElement(\"select\",(_React$createElement={name:materialId,\"data-idx\":idx,id:materialId,value:{materialData:materialData},className:\"material\"},_defineProperty(_React$createElement,\"value\",windowState[idx].material),_defineProperty(_React$createElement,\"onChange\",handleWindowChange),_React$createElement),React.createElement(\"option\",{value:\"wood\"},\"Wood\"),React.createElement(\"option\",{value:\"pvc\"},\"Pvc\")))),React.createElement(Grid.Column,null,React.createElement(Form.Field,null,React.createElement(\"label\",null,\"Price\"),React.createElement(\"input\",{name:priceId,\"data-idx\":idx,id:priceId,className:\"price\",value:windowState[idx].price,onChange:handleWindowChange}))),React.createElement(Grid.Row,null,React.createElement(\"div\",{id:\"windowContainer\",style:{height:newHeight,width:displayWidth}},items.map(function(value,index){var pSpacing=panelSpacing*(index+1)-(index+1);return React.createElement(\"div\",{style:{position:\"relative\",left:pSpacing},key:index,className:'windowItem '+value});}))),React.createElement(Grid.Row,{columns:1},React.createElement(Grid.Column,null,React.createElement(Form.Field,null,React.createElement(\"label\",null,\"Notes\"),React.createElement(\"textarea\",{name:notesId,\"data-idx\":idx,id:notesId,className:\"notes\",value:windowState[idx].notes,onChange:handleWindowChange})))),React.createElement(Grid.Row,null,React.createElement(Grid.Column,null,React.createElement(Form.Field,null,React.createElement(Button,{floated:\"left\",icon:true,labelPosition:\"left\",color:\"red\",size:\"small\",onClick:handleWindowRemove},React.createElement(Icon,{name:\"edit\"}),\" Remove Window\")))))),React.createElement(\"br\",null));};export default WindowInputs;","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/shutter-quote-app/src/components/WindowInputs.js"],"names":["React","Button","Icon","Grid","Form","Input","Label","Segment","WindowInputs","idx","windowState","handleWindowChange","handleWindowRemove","nameId","widthId","heightId","panelId","materialId","priceId","notesId","materialData","text","value","minHeight","minWidth","maxHeight","maxWidth","displayWidth","maxPanels","panelData","items","itemList","ValidateWindowInputFields","height","width","h","w","i","push","res","widthRatio","newHeight","panelSpacing","panel","console","log","JSON","stringify","name","material","price","map","index","pSpacing","position","left","notes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Icon, Grid, Form, Input, Label, Segment } from \"semantic-ui-react\";\nimport './window.css';\n\nconst WindowInputs = ({ idx, windowState, handleWindowChange, handleWindowRemove }) => {\n    const nameId = `name-${idx}`;\n    const widthId = `width-${idx}`;\n    const heightId = `height-${idx}`;\n    const panelId = `panel-${idx}`;\n    const materialId = `material-${idx}`;\n    const priceId = `price-${idx}`;\n    const notesId = `notes-${idx}`;\n    const materialData = [{ text: 'wood', value: 'wood' }, { text: 'pvc', value: 'pvc' }];\n    const minHeight = 300;\n    const minWidth = 500;\n    const maxHeight = 10000;\n    const maxWidth = 10000;\n    const displayWidth = 600;\n\n    var maxPanels = 4;\n    const panelData = [];\n    const items = [];\n    let itemList = [];\n\n    function ValidateWindowInputFields(height, width) {\n        var h = height;\n        var w = width;\n\n        if (height === \"\" || height < minHeight) {\n            h = minHeight;\n        }\n\n        if (height > maxHeight) {\n            h = maxHeight;\n        }\n\n        if (width === \"\" || width < minWidth) {\n            w = minWidth;\n        }\n\n        if (width > maxWidth) {\n            w = maxWidth;\n        }\n\n        return { height: h, width: w };\n    }\n\n    for (var i = 1; i <= maxPanels; i++) {\n        panelData.push({ text: i, value: i });\n    }\n\n    var res = ValidateWindowInputFields(windowState[idx].height, windowState[idx].width)\n\n    let widthRatio = res.width / displayWidth;\n    let newHeight = res.height / widthRatio;\n    var panelSpacing = displayWidth / windowState[idx].panel;\n\n    console.log(\"window state \" + JSON.stringify(windowState[idx]));\n\n    for (let i = 0; i < windowState[idx].panel - 1; i++) {\n        items.push(itemList[i]);\n    }\n\n    return (\n        <div key={`window-${idx}`}>\n            <Segment>\n                <Grid columns={3} padded=\"vertically\">\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Name</label>\n                            <input\n                                name={nameId}\n                                data-idx={idx}\n                                id={nameId}\n                                className=\"name\"\n                                value={windowState[idx].name}\n                                onChange={handleWindowChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field >\n                            <label>Height (mm)</label>\n                            <input\n                                name={heightId}\n                                data-idx={idx}\n                                id={heightId}\n                                className=\"height\"\n                                value={windowState[idx].height}\n                                onChange={handleWindowChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Width (mm)</label>\n                            <input\n                                name={widthId}\n                                data-idx={idx}\n                                id={widthId}\n                                className=\"width\"\n                                value={windowState[idx].width}\n                                onChange={handleWindowChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field >\n                            <label>Number of Shutters</label>\n                            <input\n                                type=\"number\"\n                                min={2}\n                                max={4}\n                                name={panelId}\n                                data-idx={idx}\n                                id={panelId}\n                                className=\"panel\"\n                                value={windowState[idx].panel}\n                                onChange={handleWindowChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field >\n                            <label className=\"material\">Material</label>\n                            <select\n                                name={materialId}\n                                data-idx={idx}\n                                id={materialId}\n                                value={{ materialData }}\n                                className=\"material\"\n                                value={windowState[idx].material}\n                                onChange={handleWindowChange}>\n                                <option value=\"wood\">Wood</option>\n                                <option value=\"pvc\">Pvc</option>\n                            </select>\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field >\n                            <label>Price</label>\n                            <input\n                                name={priceId}\n                                data-idx={idx}\n                                id={priceId}\n                                className=\"price\"\n                                value={windowState[idx].price}\n                                onChange={handleWindowChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Row>\n                        <div id=\"windowContainer\" style={{ height: newHeight, width: displayWidth }}>\n                            {items.map((value, index) => {\n                                var pSpacing = (panelSpacing * (index + 1) - ((index + 1)));\n                                return <div style={{ position: \"relative\", left: pSpacing }} key={index} className={'windowItem ' + value}>\n                                </div>\n                            })}\n                        </div>\n                    </Grid.Row>\n                    <Grid.Row columns={1}>\n                        <Grid.Column >\n                            <Form.Field>\n                                <label>Notes</label>\n                                <textarea\n                                    name={notesId}\n                                    data-idx={idx}\n                                    id={notesId}\n                                    className=\"notes\"\n                                    value={windowState[idx].notes}\n                                    onChange={handleWindowChange}\n                                />\n                            </Form.Field>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Form.Field>\n                                <Button\n                                    floated=\"left\"\n                                    icon\n                                    labelPosition=\"left\"\n                                    color=\"red\"\n                                    size=\"small\"\n                                    onClick={handleWindowRemove}\n                                    >\n                                    <Icon name=\"edit\" /> Remove Window\n                        </Button>\n                            </Form.Field>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Segment>\n            <br />\n        </div >\n    );\n};\n\nWindowInputs.propTypes = {\n    idx: PropTypes.number,\n    windowState: PropTypes.array,\n    handleWindowChange: PropTypes.func,\n};\n\nexport default WindowInputs;\n"]},"metadata":{},"sourceType":"module"}