{"ast":null,"code":"var _jsxFileName = \"/home/cbellee/repos/github/cbellee/parent-child-test/src/components/QuoteForm.js\";\nimport React, { useState, useContext } from 'react';\nimport WindowInputs from './WindowInputs';\nimport { AddQuoteToLocalStorage, GetQuotesFromLocalStorage, GetPostCodeFromSuburb, GetSuburbList } from '../helpers/Helpers';\nimport { Segment, Form, Input, Button, Grid, Card, GridRow, GridColumn } from \"semantic-ui-react\";\nimport seedData from '../helpers/SeedData';\nimport PostCodeContext from './PostCodeContext';\nconst dateCreated = new Date().toISOString();\n\nconst QuoteForm = () => {\n  const postCodes = useContext(PostCodeContext)[0];\n  var stateName = \"NSW\";\n  var suburbs = GetSuburbList(postCodes, stateName);\n  const [quoteState, setQuoteState] = useState({\n    id: '',\n    dateCreated: dateCreated,\n    total: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    street: '',\n    suburb: '',\n    city: '',\n    windows: []\n  });\n\n  const handleQuoteChange = e => setQuoteState({ ...quoteState,\n    [e.target.name]: e.target.value\n  });\n\n  const handleSuburbChange = e => {\n    const updatedPostCode = quoteState;\n    var postcode = GetPostCodeFromSuburb(postCodes, e.target.value);\n    console.log(postcode);\n    updatedPostCode[quoteState.postCode] = postcode;\n    setQuoteState(updatedPostCode);\n  };\n\n  const blankWindow = {\n    name: '',\n    width: '2400',\n    height: '1200',\n    panel: '2'\n  };\n  const [windowState, setWindowState] = useState([{ ...blankWindow\n  }]);\n\n  const addWindow = () => {\n    setWindowState([...windowState, { ...blankWindow\n    }]);\n  };\n\n  const handleWindowChange = e => {\n    const updatedWindows = [...windowState];\n    console.log(JSON.stringify(updatedWindows));\n    updatedWindows[e.target.dataset.idx][e.target.className] = e.target.value;\n    setWindowState(updatedWindows);\n  };\n\n  const onSubmit = () => {\n    quoteState.windows = windowState;\n    console.log(\"quote state: \" + JSON.stringify(quoteState));\n    AddQuoteToLocalStorage('quotes', quoteState, seedData);\n  };\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 3,\n    padded: \"vertically\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    label: \"First Name\",\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    value: quoteState.firstName,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    label: \"Last Name\",\n    type: \"text\",\n    name: \"lastName\",\n    id: \"lastName\",\n    value: quoteState.lastName,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    label: \"Email\",\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    value: quoteState.email,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(\"input\", {\n    label: \"Phone\",\n    type: \"text\",\n    name: \"phone\",\n    id: \"phone\",\n    value: quoteState.phone,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Street\"), React.createElement(\"input\", {\n    label: \"Street\",\n    type: \"text\",\n    name: \"street\",\n    id: \"street\",\n    value: quoteState.street,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Suburb\"), React.createElement(\"select\", {\n    label: \"Suburb\",\n    name: \"suburb\",\n    id: \"suburb\",\n    value: quoteState.suburb,\n    onChange: handleSuburbChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, suburbs.map(suburb => React.createElement(\"option\", {\n    key: suburb.text,\n    value: suburb.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, suburb.value))))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"PostCode\"), React.createElement(\"input\", {\n    label: \"Postcode\",\n    type: \"text\",\n    name: \"postCode\",\n    id: \"postCode\",\n    value: quoteState.postCode,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"button\",\n    value: \"Add Window\",\n    onClick: addWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"submit\",\n    value: \"Save Quote\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, windowState.map((val, idx) => React.createElement(WindowInputs, {\n    key: `window-${idx}`,\n    idx: idx,\n    windowState: windowState,\n    handleWindowChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })))));\n};\n\nexport default QuoteForm;","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/parent-child-test/src/components/QuoteForm.js"],"names":["React","useState","useContext","WindowInputs","AddQuoteToLocalStorage","GetQuotesFromLocalStorage","GetPostCodeFromSuburb","GetSuburbList","Segment","Form","Input","Button","Grid","Card","GridRow","GridColumn","seedData","PostCodeContext","dateCreated","Date","toISOString","QuoteForm","postCodes","stateName","suburbs","quoteState","setQuoteState","id","total","firstName","lastName","email","phone","street","suburb","city","windows","handleQuoteChange","e","target","name","value","handleSuburbChange","updatedPostCode","postcode","console","log","postCode","blankWindow","width","height","panel","windowState","setWindowState","addWindow","handleWindowChange","updatedWindows","JSON","stringify","dataset","idx","className","onSubmit","map","text","val"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport WindowInputs from './WindowInputs';\nimport { AddQuoteToLocalStorage, GetQuotesFromLocalStorage, GetPostCodeFromSuburb, GetSuburbList } from '../helpers/Helpers';\nimport { Segment, Form, Input, Button, Grid, Card, GridRow, GridColumn } from \"semantic-ui-react\";\nimport seedData from '../helpers/SeedData';\nimport PostCodeContext from './PostCodeContext';\n\nconst dateCreated = new Date().toISOString();\n\nconst QuoteForm = () => {\n    const postCodes = useContext(PostCodeContext)[0];\n    var stateName = \"NSW\"\n    var suburbs = GetSuburbList(postCodes, stateName);\n\n    const [quoteState, setQuoteState] = useState({\n        id: '',\n        dateCreated: dateCreated,\n        total: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        street: '',\n        suburb: '',\n        city: '',\n        \n        windows: []\n    });\n\n    const handleQuoteChange = (e) => setQuoteState({\n        ...quoteState,\n        [e.target.name]: e.target.value,\n    });\n\n    const handleSuburbChange = (e) => {\n        const updatedPostCode = quoteState;\n        var postcode = GetPostCodeFromSuburb(postCodes, e.target.value);\n        console.log(postcode);\n        updatedPostCode[quoteState.postCode] = postcode;\n        setQuoteState(updatedPostCode);\n    };\n\n    const blankWindow = { name: '', width: '2400', height: '1200', panel: '2' };\n    const [windowState, setWindowState] = useState([\n        { ...blankWindow },\n    ]);\n\n    const addWindow = () => {\n        setWindowState([...windowState, { ...blankWindow }]);\n    };\n\n    const handleWindowChange = (e) => {\n        const updatedWindows = [...windowState];\n        console.log(JSON.stringify(updatedWindows));\n        updatedWindows[e.target.dataset.idx][e.target.className] = e.target.value;\n        setWindowState(updatedWindows);\n    };\n\n    const onSubmit = () => {\n        quoteState.windows = windowState;\n        console.log(\"quote state: \" + JSON.stringify(quoteState));\n        AddQuoteToLocalStorage('quotes', quoteState, seedData);\n    }\n\n    return (\n        <Form>\n            <Segment>\n                <Grid columns={3} padded=\"vertically\">\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>First Name</label>\n                            <input\n                                label=\"First Name\"\n                                type=\"text\"\n                                name=\"firstName\"\n                                id=\"firstName\"\n                                value={quoteState.firstName}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Last Name</label>\n                            <input\n                                label=\"Last Name\"\n                                type=\"text\"\n                                name=\"lastName\"\n                                id=\"lastName\"\n                                value={quoteState.lastName}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Email</label>\n                            <input\n                                label=\"Email\"\n                                type=\"text\"\n                                name=\"email\"\n                                id=\"email\"\n                                value={quoteState.email}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Phone</label>\n                            <input\n                                label=\"Phone\"\n                                type=\"text\"\n                                name=\"phone\"\n                                id=\"phone\"\n                                value={quoteState.phone}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Street</label>\n                            <input\n                                label=\"Street\"\n                                type=\"text\"\n                                name=\"street\"\n                                id=\"street\"\n                                value={quoteState.street}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Suburb</label>\n                            <select\n                                label=\"Suburb\"\n                                name=\"suburb\"\n                                id=\"suburb\"\n                                value={quoteState.suburb}\n                                onChange={handleSuburbChange}>\n                                {suburbs.map((suburb) => <option key={suburb.text} value={suburb.value}>{suburb.value}</option>)}\n                            </select>\n                        </Form.Field>\n                    </Grid.Column>\n                    {/*  <Grid.Column>\n                        <Form.Field>\n                            <label>City</label>\n                            <input\n                                label=\"City\"\n                                type=\"text\"\n                                name=\"city\"\n                                id=\"city\"\n                                value={quoteState.city}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column> */}\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>PostCode</label>\n                            <input\n                                label=\"Postcode\"\n                                type=\"text\"\n                                name=\"postCode\"\n                                id=\"postCode\"\n                                value={quoteState.postCode}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Grid>\n                <Form.Field>\n                    <Input\n                        type=\"button\"\n                        value=\"Add Window\"\n                        onClick={addWindow}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <Input type=\"submit\" value=\"Save Quote\" onClick={onSubmit} />\n                </Form.Field>\n            </Grid>\n            <Grid columns={1}>\n                <Grid.Column>\n                    {\n                        windowState.map((val, idx) => (\n                            <WindowInputs\n                                key={`window-${idx}`}\n                                idx={idx}\n                                windowState={windowState}\n                                handleWindowChange={handleWindowChange}\n                            />\n                        ))\n                    }\n                </Grid.Column>\n            </Grid>\n        </Form >\n    );\n};\n\nexport default QuoteForm;"]},"metadata":{},"sourceType":"module"}