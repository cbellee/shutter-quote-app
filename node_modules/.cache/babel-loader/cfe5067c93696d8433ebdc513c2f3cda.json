{"ast":null,"code":"import _slicedToArray from\"/home/cbellee/repos/github/cbellee/shutter-quote-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Link}from\"react-router-dom\";import{Segment,Table,Button,Icon}from\"semantic-ui-react\";import{GetQuotesFromLocalStorage,RemoveQuoteFromLocalStorage}from\"../helpers/Helpers\";import seedData from'../helpers/SeedData';export default function QuoteTable(){var quotes=GetQuotesFromLocalStorage('quotes',seedData);var _useState=useState(),_useState2=_slicedToArray(_useState,2),selectedId=_useState2[0],setSelectedId=_useState2[1];if(!quotes||quotes===null||quotes===''){return React.createElement(\"h2\",null,\"No Data Found...\");}var onRemoveQuote=function onRemoveQuote(){RemoveQuoteFromLocalStorage('quotes',selectedId);setSelectedId(null);// Clear selection\n};var onEditQuote=function onEditQuote(){setSelectedId(null);// Clear selection\n};var rows=quotes.map(function(quote){return React.createElement(Table.Row,{key:quote.id,onClick:function onClick(){return setSelectedId(quote.id);},active:quote.id===selectedId},React.createElement(Table.Cell,null,quote.id),React.createElement(Table.Cell,null,quote.dateCreated),React.createElement(Table.Cell,null,quote.firstName,\" \",quote.lastName),React.createElement(Table.Cell,null,quote.email),React.createElement(Table.Cell,null,quote.windows.length),React.createElement(Table.Cell,null,\"$\",quote.total));});return React.createElement(Segment,null,React.createElement(Table,{celled:true,striped:true,selectable:true,sortable:true},React.createElement(Table.Header,null,React.createElement(Table.Row,null,React.createElement(Table.HeaderCell,null,\"Id\"),React.createElement(Table.HeaderCell,null,\"Date Created\"),React.createElement(Table.HeaderCell,null,\"Name\"),React.createElement(Table.HeaderCell,null,\"Email\"),React.createElement(Table.HeaderCell,null,\"Windows\"),React.createElement(Table.HeaderCell,null,\"Total\"))),React.createElement(Table.Body,null,rows),React.createElement(Table.Footer,{fullWidth:true},React.createElement(Table.Row,null,React.createElement(Table.HeaderCell,null),React.createElement(Table.HeaderCell,{colSpan:\"6\"},React.createElement(Link,{to:\"/quote/\".concat(selectedId)},React.createElement(Button,{floated:\"left\",icon:true,labelPosition:\"left\",color:\"green\",size:\"small\",disabled:!selectedId,onClick:onEditQuote},React.createElement(Icon,{name:\"edit\"}),\" Edit Quote\")),React.createElement(Button,{floated:\"left\",icon:true,labelPosition:\"left\",color:\"red\",size:\"small\",disabled:!selectedId,onClick:onRemoveQuote},React.createElement(Icon,{name:\"trash\"}),\" Remove Quote\"))))));}","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/shutter-quote-app/src/components/QuoteTable.js"],"names":["React","useState","Link","Segment","Table","Button","Icon","GetQuotesFromLocalStorage","RemoveQuoteFromLocalStorage","seedData","QuoteTable","quotes","selectedId","setSelectedId","onRemoveQuote","onEditQuote","rows","map","quote","id","dateCreated","firstName","lastName","email","windows","length","total"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,OAAT,CAAkBC,KAAlB,CAAyBC,MAAzB,CAAiCC,IAAjC,KAA6C,mBAA7C,CACA,OAASC,yBAAT,CAAoCC,2BAApC,KAAuE,oBAAvE,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CAEA,cAAe,SAASC,CAAAA,UAAT,EAAsB,CACjC,GAAIC,CAAAA,MAAM,CAAGJ,yBAAyB,CAAC,QAAD,CAAWE,QAAX,CAAtC,CADiC,cAEGR,QAAQ,EAFX,wCAE1BW,UAF0B,eAEdC,aAFc,eAIjC,GAAI,CAACF,MAAD,EAAWA,MAAM,GAAK,IAAtB,EAA8BA,MAAM,GAAK,EAA7C,CAAiD,CAC7C,MACI,kDADJ,CAGH,CAED,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxBN,2BAA2B,CAAC,QAAD,CAAWI,UAAX,CAA3B,CACAC,aAAa,CAAC,IAAD,CAAb,CAAqB;AACxB,CAHD,CAKA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBF,aAAa,CAAC,IAAD,CAAb,CAAqB;AACxB,CAFD,CAIA,GAAMG,CAAAA,IAAI,CAAGL,MAAM,CAACM,GAAP,CAAW,SAAAC,KAAK,QACzB,qBAAC,KAAD,CAAO,GAAP,EACI,GAAG,CAAEA,KAAK,CAACC,EADf,CAEI,OAAO,CAAE,yBAAMN,CAAAA,aAAa,CAACK,KAAK,CAACC,EAAP,CAAnB,EAFb,CAGI,MAAM,CAAED,KAAK,CAACC,EAAN,GAAaP,UAHzB,EAII,oBAAC,KAAD,CAAO,IAAP,MAAaM,KAAK,CAACC,EAAnB,CAJJ,CAKI,oBAAC,KAAD,CAAO,IAAP,MAAaD,KAAK,CAACE,WAAnB,CALJ,CAMI,oBAAC,KAAD,CAAO,IAAP,MAAaF,KAAK,CAACG,SAAnB,KAA+BH,KAAK,CAACI,QAArC,CANJ,CAOI,oBAAC,KAAD,CAAO,IAAP,MAAaJ,KAAK,CAACK,KAAnB,CAPJ,CAQI,oBAAC,KAAD,CAAO,IAAP,MAAaL,KAAK,CAACM,OAAN,CAAcC,MAA3B,CARJ,CASI,oBAAC,KAAD,CAAO,IAAP,UAAcP,KAAK,CAACQ,KAApB,CATJ,CADyB,EAAhB,CAAb,CAcA,MACI,qBAAC,OAAD,MACI,oBAAC,KAAD,EAAO,MAAM,KAAb,CAAc,OAAO,KAArB,CAAsB,UAAU,KAAhC,CAAiC,QAAQ,KAAzC,EACI,oBAAC,KAAD,CAAO,MAAP,MACI,oBAAC,KAAD,CAAO,GAAP,MACI,oBAAC,KAAD,CAAO,UAAP,WADJ,CAEI,oBAAC,KAAD,CAAO,UAAP,qBAFJ,CAGI,oBAAC,KAAD,CAAO,UAAP,aAHJ,CAII,oBAAC,KAAD,CAAO,UAAP,cAJJ,CAKI,oBAAC,KAAD,CAAO,UAAP,gBALJ,CAMI,oBAAC,KAAD,CAAO,UAAP,cANJ,CADJ,CADJ,CAWI,oBAAC,KAAD,CAAO,IAAP,MAAaV,IAAb,CAXJ,CAYI,oBAAC,KAAD,CAAO,MAAP,EAAc,SAAS,KAAvB,EACI,oBAAC,KAAD,CAAO,GAAP,MACI,oBAAC,KAAD,CAAO,UAAP,MADJ,CAEI,oBAAC,KAAD,CAAO,UAAP,EAAkB,OAAO,CAAC,GAA1B,EACI,oBAAC,IAAD,EAAM,EAAE,kBAAYJ,UAAZ,CAAR,EACI,oBAAC,MAAD,EACI,OAAO,CAAC,MADZ,CAEI,IAAI,KAFR,CAGI,aAAa,CAAC,MAHlB,CAII,KAAK,CAAC,OAJV,CAKI,IAAI,CAAC,OALT,CAMI,QAAQ,CAAE,CAACA,UANf,CAOI,OAAO,CAAEG,WAPb,EAQI,oBAAC,IAAD,EAAM,IAAI,CAAC,MAAX,EARJ,eADJ,CADJ,CAaI,oBAAC,MAAD,EACI,OAAO,CAAC,MADZ,CAEI,IAAI,KAFR,CAGI,aAAa,CAAC,MAHlB,CAII,KAAK,CAAC,KAJV,CAKI,IAAI,CAAC,OALT,CAMI,QAAQ,CAAE,CAACH,UANf,CAOI,OAAO,CAAEE,aAPb,EAQI,oBAAC,IAAD,EAAM,IAAI,CAAC,OAAX,EARJ,iBAbJ,CAFJ,CADJ,CAZJ,CADJ,CADJ,CA8CH","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Table, Button, Icon } from \"semantic-ui-react\";\nimport { GetQuotesFromLocalStorage, RemoveQuoteFromLocalStorage } from \"../helpers/Helpers\";\nimport seedData from '../helpers/SeedData';\n\nexport default function QuoteTable() {\n    var quotes = GetQuotesFromLocalStorage('quotes', seedData);\n    const [selectedId, setSelectedId] = useState();\n\n    if (!quotes || quotes === null || quotes === '') {\n        return (\n            <h2>No Data Found...</h2>\n        )\n    }\n\n    const onRemoveQuote = () => {\n        RemoveQuoteFromLocalStorage('quotes', selectedId)\n        setSelectedId(null); // Clear selection\n    };\n\n    const onEditQuote = () => {\n        setSelectedId(null); // Clear selection\n    };\n\n    const rows = quotes.map(quote => (\n        <Table.Row\n            key={quote.id}\n            onClick={() => setSelectedId(quote.id)}\n            active={quote.id === selectedId}>\n            <Table.Cell>{quote.id}</Table.Cell>\n            <Table.Cell>{quote.dateCreated}</Table.Cell>\n            <Table.Cell>{quote.firstName} {quote.lastName}</Table.Cell>\n            <Table.Cell>{quote.email}</Table.Cell>\n            <Table.Cell>{quote.windows.length}</Table.Cell>\n            <Table.Cell>${quote.total}</Table.Cell>\n        </Table.Row>\n    ));\n\n    return (\n        <Segment>\n            <Table celled striped selectable sortable>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Id</Table.HeaderCell>\n                        <Table.HeaderCell>Date Created</Table.HeaderCell>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Email</Table.HeaderCell>\n                        <Table.HeaderCell>Windows</Table.HeaderCell>\n                        <Table.HeaderCell>Total</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>{rows}</Table.Body>\n                <Table.Footer fullWidth>\n                    <Table.Row>\n                        <Table.HeaderCell />\n                        <Table.HeaderCell colSpan=\"6\">\n                            <Link to={`/quote/${selectedId}`}>\n                                <Button\n                                    floated=\"left\"\n                                    icon\n                                    labelPosition=\"left\"\n                                    color=\"green\"\n                                    size=\"small\"\n                                    disabled={!selectedId}\n                                    onClick={onEditQuote}>\n                                    <Icon name=\"edit\" /> Edit Quote\n                            </Button>\n                            </Link>\n                            <Button\n                                floated=\"left\"\n                                icon\n                                labelPosition=\"left\"\n                                color=\"red\"\n                                size=\"small\"\n                                disabled={!selectedId}\n                                onClick={onRemoveQuote}>\n                                <Icon name=\"trash\" /> Remove Quote\n                            </Button>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>\n            </Table>\n        </Segment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}