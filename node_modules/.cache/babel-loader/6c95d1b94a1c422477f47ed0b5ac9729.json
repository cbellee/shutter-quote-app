{"ast":null,"code":"export function GetQuotesFromLocalStorage(quotesName,seedData){try{var jsonQuotes=[];var jsonQuotes=localStorage.getItem(quotesName);if(jsonQuotes===''||jsonQuotes===null){localStorage.setItem(quotesName,JSON.stringify(seedData));console.log(\"setting local storage from 'seedData'\");jsonQuotes=localStorage.getItem(quotesName);}return JSON.parse(jsonQuotes);}catch(err){console.log(\"Error getting quotes from local storage: \\n\"+err);}}export function UpdateQuoteToLocalStorage(quotesName,quote,seedData){try{var quotes=GetQuotesFromLocalStorage(quotesName,seedData);for(var i in quotes){if(quotes[i].id==quote.id){quotes[i]=quote;localStorage.setItem(quotesName,JSON.stringify(quotes));}}}catch(err){console.log(\"Error adding quote to local storage: \\n\"+err);return;}}export function AddQuoteToLocalStorage(quotesName,quote,seedData){try{var quotes=GetQuotesFromLocalStorage(quotesName,seedData);var newId=GetNextAvailableId(quotes);quote.id=newId;console.log(\"Adding new quote with quoteId: \"+newId);quotes.push(quote);localStorage.setItem(quotesName,JSON.stringify(quotes));}catch(err){console.log(\"Error adding quote to local storage: \\n\"+err);return;}}export function RemoveQuoteFromLocalStorage(quotesName,quoteId){try{var quotes=GetQuotesFromLocalStorage(quotesName);var itemIndex=quotes.findIndex(function(x){return x.id===quoteId;});console.log(\"Removing quoteId: \"+quoteId+\" at index :\"+itemIndex);quotes.splice(itemIndex,1);localStorage.setItem(quotesName,JSON.stringify(quotes));}catch(err){console.log(\"Error removing quote from local storage: \\n\"+err);return;}}function GetNextAvailableId(quotes){if(quotes==''){return\"1\";}var ids=quotes.map(function(q){return q.id;});ids.sort(function(a,b){return b-a;});var latestId=ids[0];latestId++;console.log(\"nextId: \"+latestId);return latestId;}export function GetSuburbList(postCodes,stateName){var suburbList=[];var p=[];postCodes.map(function(postCode){if(postCode.STATE_NAME==stateName){p.push(postCode.SUBURB_NAME);}});var sortedSuburbList=p.sort();for(var id=0;id<sortedSuburbList.length;id++){suburbList.push({text:id,value:sortedSuburbList[id]});}return suburbList;}export function GetPostCodeFromSuburb(postCodes,suburbName){var po=postCodes.filter(function(postcode){return postcode.SUBURB_NAME===suburbName;});if(po.length<=0){console.log(po.length);return null;}return po[0].POST_CODE;}","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/shutter-quote-app/src/helpers/Helpers.js"],"names":["GetQuotesFromLocalStorage","quotesName","seedData","jsonQuotes","localStorage","getItem","setItem","JSON","stringify","console","log","parse","err","UpdateQuoteToLocalStorage","quote","quotes","i","id","AddQuoteToLocalStorage","newId","GetNextAvailableId","push","RemoveQuoteFromLocalStorage","quoteId","itemIndex","findIndex","x","splice","ids","map","q","sort","a","b","latestId","GetSuburbList","postCodes","stateName","suburbList","p","postCode","STATE_NAME","SUBURB_NAME","sortedSuburbList","length","text","value","GetPostCodeFromSuburb","suburbName","po","filter","postcode","POST_CODE"],"mappings":"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","sourcesContent":["export function GetQuotesFromLocalStorage(quotesName, seedData) {\n    try {\n        var jsonQuotes = [];\n        var jsonQuotes = localStorage.getItem(quotesName);\n        if (jsonQuotes === '' || jsonQuotes === null) {\n            localStorage.setItem(quotesName, JSON.stringify(seedData));\n            console.log(\"setting local storage from 'seedData'\");\n            jsonQuotes = localStorage.getItem(quotesName);\n        }\n        return JSON.parse(jsonQuotes);\n    } catch (err) {\n        console.log(\"Error getting quotes from local storage: \\n\" + err)\n    }\n}\n\nexport function UpdateQuoteToLocalStorage(quotesName, quote, seedData) {\n    try {\n        var quotes = GetQuotesFromLocalStorage(quotesName, seedData);\n        for (var i in quotes) {\n            if (quotes[i].id == quote.id) {\n                quotes[i] = quote;\n                localStorage.setItem(quotesName, JSON.stringify(quotes));\n            }\n        }\n    } catch (err) {\n        console.log(\"Error adding quote to local storage: \\n\" + err)\n        return;\n    }\n}\n\nexport function AddQuoteToLocalStorage(quotesName, quote, seedData) {\n    try {\n        var quotes = GetQuotesFromLocalStorage(quotesName, seedData);\n        var newId = GetNextAvailableId(quotes);\n        quote.id = newId;\n        console.log(\"Adding new quote with quoteId: \" + newId);\n        quotes.push(quote);\n        localStorage.setItem(quotesName, JSON.stringify(quotes));\n    } catch (err) {\n        console.log(\"Error adding quote to local storage: \\n\" + err)\n        return;\n    }\n}\n\nexport function RemoveQuoteFromLocalStorage(quotesName, quoteId) {\n    try {\n        var quotes = GetQuotesFromLocalStorage(quotesName);\n        var itemIndex = quotes.findIndex(x => x.id === quoteId);\n        console.log(\"Removing quoteId: \" + quoteId + \" at index :\" + itemIndex);\n        quotes.splice(itemIndex, 1);\n        localStorage.setItem(quotesName, JSON.stringify(quotes));\n    } catch (err) {\n        console.log(\"Error removing quote from local storage: \\n\" + err)\n        return;\n    }\n}\n\nfunction GetNextAvailableId(quotes) {\n    if (quotes == '') {\n        return \"1\";\n    }\n    var ids = quotes.map(q => q.id);\n    ids.sort((a, b) => b - a);\n    var latestId = ids[0]\n    latestId++;\n    console.log(\"nextId: \" + latestId);\n    return latestId;\n}\n\nexport function GetSuburbList(postCodes, stateName) {\n    var suburbList = [];\n    var p = [];\n\n    postCodes.map(postCode => {\n        if (postCode.STATE_NAME == stateName) {\n            p.push(postCode.SUBURB_NAME);\n        }\n    });\n\n    var sortedSuburbList = p.sort();\n\n    for (var id = 0; id < sortedSuburbList.length; id++) {\n        suburbList.push({ text: id, value: sortedSuburbList[id] });\n    }\n    return suburbList;\n}\n\nexport function GetPostCodeFromSuburb(postCodes, suburbName) {\n    let po = postCodes.filter(postcode => postcode.SUBURB_NAME === suburbName);\n    if (po.length <= 0) {\n        console.log(po.length);\n        return null;\n    }\n    return po[0].POST_CODE;\n}\n"]},"metadata":{},"sourceType":"module"}