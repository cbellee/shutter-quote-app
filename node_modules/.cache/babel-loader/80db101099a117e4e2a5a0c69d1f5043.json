{"ast":null,"code":"var _jsxFileName = \"/home/cbellee/repos/github/cbellee/parent-child-test/src/components/QuoteTable.js\";\nimport React, { useState } from \"react\";\nimport { Segment, Table, Button, Icon } from \"semantic-ui-react\";\nimport { GetQuotesFromLocalStorage } from \"../helpers/Helpers\";\nimport seedData from '../helpers/SeedData';\nexport default function QuoteTable() {\n  var quotes = GetQuotesFromLocalStorage('quotes', seedData);\n  console.log(JSON.stringify(quotes));\n  const [selectedId, setSelectedId] = useState();\n  const rows = quotes.map(quote => React.createElement(Table.Row, {\n    key: quote.id,\n    onClick: () => setSelectedId(quote.id),\n    active: quote.id === selectedId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, quote.id), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, quote.dateCreated), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, quote.firstName, \" \", quote.lastName), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, quote.email), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, quote.windows.length), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"$\", quote.total)));\n  return React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Table, {\n    celled: true,\n    striped: true,\n    selectable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Id\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Date Created\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Windows\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Price\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, rows), React.createElement(Table.Footer, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Table.HeaderCell, {\n    colSpan: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Button, {\n    floated: \"right\",\n    icon: true,\n    labelPosition: \"left\",\n    color: \"red\",\n    size: \"small\",\n    disabled: !selectedId,\n    onClick: onRemoveQuote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \" Remove Quote\"))))));\n}","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/parent-child-test/src/components/QuoteTable.js"],"names":["React","useState","Segment","Table","Button","Icon","GetQuotesFromLocalStorage","seedData","QuoteTable","quotes","console","log","JSON","stringify","selectedId","setSelectedId","rows","map","quote","id","dateCreated","firstName","lastName","email","windows","length","total","onRemoveQuote"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Segment, Table, Button, Icon } from \"semantic-ui-react\";\nimport { GetQuotesFromLocalStorage } from \"../helpers/Helpers\";\nimport seedData from '../helpers/SeedData';\n\nexport default function QuoteTable() {\n    var quotes = GetQuotesFromLocalStorage('quotes', seedData);\n    console.log(JSON.stringify(quotes));\n    const [selectedId, setSelectedId] = useState();\n\n    const rows = quotes.map(quote => (\n        <Table.Row\n            key={quote.id}\n            onClick={() => setSelectedId(quote.id)}\n            active={quote.id === selectedId}\n        >\n            <Table.Cell>{quote.id}</Table.Cell>\n            <Table.Cell>{quote.dateCreated}</Table.Cell>\n            <Table.Cell>{quote.firstName} {quote.lastName}</Table.Cell>\n            <Table.Cell>{quote.email}</Table.Cell>\n            <Table.Cell>{quote.windows.length}</Table.Cell>\n            <Table.Cell>${quote.total}</Table.Cell>\n        </Table.Row>\n    ));\n\n    return (\n        <Segment>\n            <Table celled striped selectable>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Id</Table.HeaderCell>\n                        <Table.HeaderCell>Date Created</Table.HeaderCell>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Email</Table.HeaderCell>\n                        <Table.HeaderCell>Windows</Table.HeaderCell>\n                        <Table.HeaderCell>Price</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>{rows}</Table.Body>\n                <Table.Footer fullWidth>\n                    <Table.Row>\n                        <Table.HeaderCell />\n                        <Table.HeaderCell colSpan=\"6\">\n                            <Button\n                                floated=\"right\"\n                                icon\n                                labelPosition=\"left\"\n                                color=\"red\"\n                                size=\"small\"\n                                disabled={!selectedId}\n                                onClick={onRemoveQuote}>\n                                <Icon name=\"trash\" /> Remove Quote\n                            </Button>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>\n            </Table>\n        </Segment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}