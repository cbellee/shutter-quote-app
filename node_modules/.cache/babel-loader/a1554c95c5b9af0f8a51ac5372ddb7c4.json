{"ast":null,"code":"var _jsxFileName = \"/home/cbellee/repos/github/cbellee/parent-child-test/src/components/QuoteForm.js\";\nimport React, { useState, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport WindowInputs from './WindowInputs';\nimport { AddQuoteToLocalStorage, GetQuotesFromLocalStorage, GetPostCodeFromSuburb, GetSuburbList } from '../helpers/Helpers';\nimport { Segment, Icon, Form, Input, Button, Grid, Card, GridRow, GridColumn } from \"semantic-ui-react\";\nimport seedData from '../helpers/SeedData';\nimport PostCodeContext from './PostCodeContext';\nconst dateCreated = new Date().toISOString();\n\nconst QuoteForm = () => {\n  const postCodes = useContext(PostCodeContext)[0];\n  var stateName = \"NSW\";\n  var suburbs = GetSuburbList(postCodes, stateName);\n  const [quoteState, setQuoteState] = useState({\n    id: '',\n    dateCreated: dateCreated,\n    total: 0,\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    street: '',\n    suburb: '',\n    city: '',\n    postCode: '',\n    windows: []\n  });\n\n  const handleQuoteChange = e => setQuoteState({ ...quoteState,\n    [e.target.name]: e.target.value\n  });\n\n  const handleSuburbChange = e => setQuoteState({ ...quoteState,\n    postCode: GetPostCodeFromSuburb(postCodes, e.target.value)\n  });\n\n  const handleTotalChange = e => setQuoteState({ ...quoteState,\n    total: quoteState.windows.map(window => {\n      var totalCost = totalCost + parseInt(window.price);\n    })\n  });\n  /* \n      const handleTotalChange = (e) => {\n          //quoteState.windows = windowState;\n          const updatedPrice = [...quoteState];\n          let totalCost = 0;\n          updatedPrice.windows.map((window) => {\n              totalCost = totalCost + parseInt(window.price);\n          });\n          updatedPrice[e.target.name] = totalCost;\n          console.log(\"totalCost: \" + totalCost);\n          setQuoteState([updatedPrice]);\n      }; */\n\n\n  const blankWindow = {\n    name: '',\n    width: '2400',\n    height: '1200',\n    panel: '2'\n  };\n  const [windowState, setWindowState] = useState([{ ...blankWindow\n  }]);\n  const [redirectToQuotes, setRedirectToQuotes] = useState(false);\n\n  const addWindow = () => {\n    setWindowState([...windowState, { ...blankWindow\n    }]);\n  };\n\n  const handleWindowChange = e => {\n    const updatedWindows = [...windowState];\n    console.log(JSON.stringify(updatedWindows));\n    updatedWindows[e.target.dataset.idx][e.target.className] = e.target.value;\n    setWindowState(updatedWindows);\n  };\n\n  const onSubmit = () => {\n    quoteState.windows = windowState;\n    var totalCost = 0;\n    quoteState.windows.map(window => {\n      totalCost = totalCost + parseInt(window.price);\n    });\n    quoteState.total = totalCost;\n    AddQuoteToLocalStorage('quotes', quoteState, seedData);\n    setRedirectToQuotes(true);\n  };\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, redirectToQuotes ? React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }) : null, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 3,\n    padded: \"vertically\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    label: \"First Name\",\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    value: quoteState.firstName,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    label: \"Last Name\",\n    type: \"text\",\n    name: \"lastName\",\n    id: \"lastName\",\n    value: quoteState.lastName,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    label: \"Email\",\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    value: quoteState.email,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(\"input\", {\n    label: \"Phone\",\n    type: \"text\",\n    name: \"phone\",\n    id: \"phone\",\n    value: quoteState.phone,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Street\"), React.createElement(\"input\", {\n    label: \"Street\",\n    type: \"text\",\n    name: \"street\",\n    id: \"street\",\n    value: quoteState.street,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Suburb\"), React.createElement(\"select\", {\n    label: \"Suburb\",\n    name: \"suburb\",\n    id: \"suburb\",\n    value: quoteState.suburb,\n    onChange: handleSuburbChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, suburbs.map(suburb => React.createElement(\"option\", {\n    key: suburb.text,\n    value: suburb.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, suburb.value))))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"PostCode\"), React.createElement(\"input\", {\n    label: \"Postcode\",\n    type: \"text\",\n    name: \"postCode\",\n    id: \"postCode\",\n    value: quoteState.postCode,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Total\"), React.createElement(\"input\", {\n    label: \"Total\",\n    type: \"text\",\n    name: \"total\",\n    id: \"total\",\n    value: 0,\n    onChange: handleTotalChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Button, {\n    floated: \"left\",\n    icon: true,\n    labelPosition: \"left\",\n    color: \"blue\",\n    size: \"small\" //disabled={!selectedId}\n    ,\n    onClick: addWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), \" Add Window\")), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(Button, {\n    floated: \"left\",\n    icon: true,\n    labelPosition: \"left\",\n    color: \"green\",\n    size: \"small\" //disabled={!selectedId}\n    ,\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), \" Save Quote\"))), React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, windowState.map((val, idx) => React.createElement(WindowInputs, {\n    key: `window-${idx}`,\n    idx: idx,\n    windowState: windowState,\n    handleWindowChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  })))));\n};\n\nexport default QuoteForm;","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/parent-child-test/src/components/QuoteForm.js"],"names":["React","useState","useContext","Redirect","WindowInputs","AddQuoteToLocalStorage","GetQuotesFromLocalStorage","GetPostCodeFromSuburb","GetSuburbList","Segment","Icon","Form","Input","Button","Grid","Card","GridRow","GridColumn","seedData","PostCodeContext","dateCreated","Date","toISOString","QuoteForm","postCodes","stateName","suburbs","quoteState","setQuoteState","id","total","firstName","lastName","email","phone","street","suburb","city","postCode","windows","handleQuoteChange","e","target","name","value","handleSuburbChange","handleTotalChange","map","window","totalCost","parseInt","price","blankWindow","width","height","panel","windowState","setWindowState","redirectToQuotes","setRedirectToQuotes","addWindow","handleWindowChange","updatedWindows","console","log","JSON","stringify","dataset","idx","className","onSubmit","text","val"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport WindowInputs from './WindowInputs';\nimport { AddQuoteToLocalStorage, GetQuotesFromLocalStorage, GetPostCodeFromSuburb, GetSuburbList } from '../helpers/Helpers';\nimport { Segment, Icon, Form, Input, Button, Grid, Card, GridRow, GridColumn } from \"semantic-ui-react\";\nimport seedData from '../helpers/SeedData';\nimport PostCodeContext from './PostCodeContext';\n\nconst dateCreated = new Date().toISOString();\n\nconst QuoteForm = () => {\n    const postCodes = useContext(PostCodeContext)[0];\n    var stateName = \"NSW\"\n    var suburbs = GetSuburbList(postCodes, stateName);\n\n    const [quoteState, setQuoteState] = useState({\n        id: '',\n        dateCreated: dateCreated,\n        total: 0,\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        street: '',\n        suburb: '',\n        city: '',\n        postCode: '',\n        windows: []\n    });\n\n    const handleQuoteChange = (e) => setQuoteState({\n        ...quoteState,\n        [e.target.name]: e.target.value,\n    });\n\n    const handleSuburbChange = (e) => setQuoteState({\n        ...quoteState,\n        postCode: GetPostCodeFromSuburb(postCodes, e.target.value)\n    });\n\n    const handleTotalChange = (e) => setQuoteState({\n        ...quoteState,\n        total: quoteState.windows.map((window) => {\n            var totalCost = totalCost + parseInt(window.price);\n        })\n    });\n/* \n    const handleTotalChange = (e) => {\n        //quoteState.windows = windowState;\n        const updatedPrice = [...quoteState];\n        let totalCost = 0;\n        updatedPrice.windows.map((window) => {\n            totalCost = totalCost + parseInt(window.price);\n        });\n        updatedPrice[e.target.name] = totalCost;\n        console.log(\"totalCost: \" + totalCost);\n        setQuoteState([updatedPrice]);\n    }; */\n\n    const blankWindow = { name: '', width: '2400', height: '1200', panel: '2' };\n    const [windowState, setWindowState] = useState([\n        { ...blankWindow },\n    ]);\n\n    const [redirectToQuotes, setRedirectToQuotes] = useState(false);\n\n    const addWindow = () => {\n        setWindowState([...windowState, { ...blankWindow }]);\n    };\n\n    const handleWindowChange = (e) => {\n        const updatedWindows = [...windowState];\n        console.log(JSON.stringify(updatedWindows));\n        updatedWindows[e.target.dataset.idx][e.target.className] = e.target.value;\n        setWindowState(updatedWindows);\n    };\n\n    const onSubmit = () => {\n        quoteState.windows = windowState;\n        var totalCost = 0;\n        quoteState.windows.map((window) => {\n            totalCost = totalCost + parseInt(window.price);\n        });\n        quoteState.total = totalCost;\n        AddQuoteToLocalStorage('quotes', quoteState, seedData);\n        setRedirectToQuotes(true);\n    }\n\n    return (\n        <Form>\n            {redirectToQuotes ? <Redirect to=\"/\" /> : null}\n            <Segment>\n                <Grid columns={3} padded=\"vertically\">\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>First Name</label>\n                            <input\n                                label=\"First Name\"\n                                type=\"text\"\n                                name=\"firstName\"\n                                id=\"firstName\"\n                                value={quoteState.firstName}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Last Name</label>\n                            <input\n                                label=\"Last Name\"\n                                type=\"text\"\n                                name=\"lastName\"\n                                id=\"lastName\"\n                                value={quoteState.lastName}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Email</label>\n                            <input\n                                label=\"Email\"\n                                type=\"text\"\n                                name=\"email\"\n                                id=\"email\"\n                                value={quoteState.email}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Phone</label>\n                            <input\n                                label=\"Phone\"\n                                type=\"text\"\n                                name=\"phone\"\n                                id=\"phone\"\n                                value={quoteState.phone}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Street</label>\n                            <input\n                                label=\"Street\"\n                                type=\"text\"\n                                name=\"street\"\n                                id=\"street\"\n                                value={quoteState.street}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Suburb</label>\n                            <select\n                                label=\"Suburb\"\n                                name=\"suburb\"\n                                id=\"suburb\"\n                                value={quoteState.suburb}\n                                onChange={handleSuburbChange}>\n                                {suburbs.map((suburb) => <option key={suburb.text} value={suburb.value}>{suburb.value}</option>)}\n                            </select>\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>PostCode</label>\n                            <input\n                                label=\"Postcode\"\n                                type=\"text\"\n                                name=\"postCode\"\n                                id=\"postCode\"\n                                value={quoteState.postCode}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Total</label>\n                            <input\n                                label=\"Total\"\n                                type=\"text\"\n                                name=\"total\"\n                                id=\"total\"\n                                value={0}\n                                onChange={handleTotalChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Grid>\n                <Form.Field>\n                    <Button\n                        floated=\"left\"\n                        icon\n                        labelPosition=\"left\"\n                        color=\"blue\"\n                        size=\"small\"\n                        //disabled={!selectedId}\n                        onClick={addWindow}>\n                        <Icon name=\"edit\" /> Add Window\n                        </Button>\n                    {/*  <Input\n                        type=\"button\"\n                        value=\"Add Window\"\n                        onClick={addWindow}\n                    /> */}\n                </Form.Field>\n                <Form.Field>\n                    <Button\n                        floated=\"left\"\n                        icon\n                        labelPosition=\"left\"\n                        color=\"green\"\n                        size=\"small\"\n                        //disabled={!selectedId}\n                        onClick={onSubmit}>\n                        <Icon name=\"edit\" /> Save Quote\n                        </Button>\n                    {/*  <Input type=\"submit\" value=\"Save Quote\" onClick={onSubmit} /> */}\n                </Form.Field>\n            </Grid>\n            <Grid columns={1}>\n                <Grid.Column>\n                    {\n                        windowState.map((val, idx) => (\n                            <WindowInputs\n                                key={`window-${idx}`}\n                                idx={idx}\n                                windowState={windowState}\n                                handleWindowChange={handleWindowChange}\n                            />\n                        ))\n                    }\n                </Grid.Column>\n            </Grid>\n        </Form >\n    );\n};\n\nexport default QuoteForm;"]},"metadata":{},"sourceType":"module"}