{"ast":null,"code":"var _jsxFileName = \"/home/cbellee/repos/github/cbellee/parent-child-test/src/components/QuoteDetail.js\";\nimport React, { useState, useContext } from 'react';\nimport WindowInputs from './WindowInputs';\nimport { UpdateQuoteToLocalStorage, GetQuotesFromLocalStorage, GetPostCodeFromSuburb, GetSuburbList } from '../helpers/Helpers';\nimport { Segment, Form, Icon, Input, Button, Grid, Card, GridRow, GridColumn } from \"semantic-ui-react\";\nimport seedData from '../helpers/SeedData';\nimport PostCodeContext from './PostCodeContext';\nconst dateCreated = new Date().toISOString();\n\nconst QuoteDetail = ({\n  match\n}) => {\n  const {\n    params: {\n      quoteId\n    }\n  } = match;\n  let quotes = GetQuotesFromLocalStorage('quotes', seedData);\n  let quote = quotes.filter(quote => quote.id == quoteId)[0];\n  console.log(\"quoteId: \" + quoteId);\n  const postCodes = useContext(PostCodeContext)[0];\n  var stateName = \"NSW\";\n  var suburbs = GetSuburbList(postCodes, stateName);\n  const [quoteState, setQuoteState] = useState(quote);\n  const [windowState, setWindowState] = useState(quote.windows);\n\n  const handleQuoteChange = e => setQuoteState({ ...quoteState,\n    [e.target.name]: e.target.value\n  });\n\n  const handleSuburbChange = e => setQuoteState({ ...quoteState,\n    postCode: GetPostCodeFromSuburb(postCodes, e.target.value)\n  });\n\n  console.log(\"quote state: \" + JSON.stringify(quoteState.quote));\n  console.log(\"window state: \" + JSON.stringify(windowState));\n  const blankWindow = {\n    name: '',\n    width: '2400',\n    height: '1200',\n    panel: '2'\n  };\n\n  const addWindow = () => {\n    setWindowState([...windowState, { ...blankWindow\n    }]);\n  };\n\n  const handleWindowChange = e => {\n    const updatedWindows = [...windowState];\n    console.log(JSON.stringify(updatedWindows));\n    updatedWindows[e.target.dataset.idx][e.target.className] = e.target.value;\n    setWindowState(updatedWindows);\n  };\n\n  const onSubmit = () => {\n    quoteState.windows = windowState;\n    console.log(\"quote save state: \" + JSON.stringify(quoteState));\n    UpdateQuoteToLocalStorage('quotes', quoteState, seedData);\n  };\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    columns: 3,\n    padded: \"vertically\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    label: \"First Name\",\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    value: quoteState.firstName,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    label: \"Last Name\",\n    type: \"text\",\n    name: \"lastName\",\n    id: \"lastName\",\n    value: quoteState.lastName,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    label: \"Email\",\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    value: quoteState.email,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(\"input\", {\n    label: \"Phone\",\n    type: \"text\",\n    name: \"phone\",\n    id: \"phone\",\n    value: quoteState.phone,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Street\"), React.createElement(\"input\", {\n    label: \"Street\",\n    type: \"text\",\n    name: \"street\",\n    id: \"street\",\n    value: quoteState.street,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Suburb\"), React.createElement(\"select\", {\n    label: \"Suburb\",\n    name: \"suburb\",\n    id: \"suburb\",\n    value: quoteState.suburb,\n    onChange: handleSuburbChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, suburbs.map(suburb => React.createElement(\"option\", {\n    key: suburb.text,\n    value: suburb.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, suburb.value))))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"PostCode\"), React.createElement(\"input\", {\n    label: \"Postcode\",\n    type: \"text\",\n    name: \"postCode\",\n    id: \"postCode\",\n    value: quoteState.postCode,\n    onChange: handleQuoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Button, {\n    floated: \"left\",\n    icon: true,\n    labelPosition: \"left\",\n    color: \"blue\",\n    size: \"small\" //disabled={!selectedId}\n    ,\n    onClick: addWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), \" Add Window\")), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"submit\",\n    value: \"Save Quote\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    columns: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, windowState.map((val, idx) => React.createElement(WindowInputs, {\n    key: `window-${idx}`,\n    idx: idx,\n    windowState: windowState,\n    handleWindowChange: handleWindowChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })))));\n};\n\nexport default QuoteDetail;","map":{"version":3,"sources":["/home/cbellee/repos/github/cbellee/parent-child-test/src/components/QuoteDetail.js"],"names":["React","useState","useContext","WindowInputs","UpdateQuoteToLocalStorage","GetQuotesFromLocalStorage","GetPostCodeFromSuburb","GetSuburbList","Segment","Form","Icon","Input","Button","Grid","Card","GridRow","GridColumn","seedData","PostCodeContext","dateCreated","Date","toISOString","QuoteDetail","match","params","quoteId","quotes","quote","filter","id","console","log","postCodes","stateName","suburbs","quoteState","setQuoteState","windowState","setWindowState","windows","handleQuoteChange","e","target","name","value","handleSuburbChange","postCode","JSON","stringify","blankWindow","width","height","panel","addWindow","handleWindowChange","updatedWindows","dataset","idx","className","onSubmit","firstName","lastName","email","phone","street","suburb","map","text","val"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport WindowInputs from './WindowInputs';\nimport { UpdateQuoteToLocalStorage, GetQuotesFromLocalStorage, GetPostCodeFromSuburb, GetSuburbList } from '../helpers/Helpers';\nimport { Segment, Form, Icon, Input, Button, Grid, Card, GridRow, GridColumn } from \"semantic-ui-react\";\nimport seedData from '../helpers/SeedData';\nimport PostCodeContext from './PostCodeContext';\n\nconst dateCreated = new Date().toISOString();\n\nconst QuoteDetail = ({ match }) => {\n    const {\n        params: { quoteId },\n    } = match;\n\n    let quotes = GetQuotesFromLocalStorage('quotes', seedData);\n    let quote = quotes.filter((quote) => quote.id == quoteId)[0];\n    console.log(\"quoteId: \" + quoteId);\n\n    const postCodes = useContext(PostCodeContext)[0];\n    var stateName = \"NSW\"\n    var suburbs = GetSuburbList(postCodes, stateName);\n\n    const [quoteState, setQuoteState] = useState(\n        quote,\n    );\n\n    const [windowState, setWindowState] = useState(\n        quote.windows,\n    );\n\n    const handleQuoteChange = (e) => setQuoteState({\n        ...quoteState,\n        [e.target.name]: e.target.value,\n    });\n\n    const handleSuburbChange = (e) => setQuoteState({\n        ...quoteState,\n        postCode: GetPostCodeFromSuburb(postCodes, e.target.value)\n    });\n\n    console.log(\"quote state: \" + JSON.stringify(quoteState.quote));\n    console.log(\"window state: \" + JSON.stringify(windowState));\n\n    const blankWindow = { name: '', width: '2400', height: '1200', panel: '2' };\n    const addWindow = () => {\n        setWindowState([...windowState, { ...blankWindow }]);\n    };\n\n    const handleWindowChange = (e) => {\n        const updatedWindows = [...windowState];\n        console.log(JSON.stringify(updatedWindows));\n        updatedWindows[e.target.dataset.idx][e.target.className] = e.target.value;\n        setWindowState(updatedWindows);\n    };\n\n    const onSubmit = () => {\n        quoteState.windows = windowState;\n        console.log(\"quote save state: \" + JSON.stringify(quoteState));\n        UpdateQuoteToLocalStorage('quotes', quoteState, seedData);\n    }\n\n    return (\n        <Form>\n            <Segment>\n                <Grid columns={3} padded=\"vertically\">\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>First Name</label>\n                            <input\n                                label=\"First Name\"\n                                type=\"text\"\n                                name=\"firstName\"\n                                id=\"firstName\"\n                                value={quoteState.firstName}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Last Name</label>\n                            <input\n                                label=\"Last Name\"\n                                type=\"text\"\n                                name=\"lastName\"\n                                id=\"lastName\"\n                                value={quoteState.lastName}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Email</label>\n                            <input\n                                label=\"Email\"\n                                type=\"text\"\n                                name=\"email\"\n                                id=\"email\"\n                                value={quoteState.email}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Phone</label>\n                            <input\n                                label=\"Phone\"\n                                type=\"text\"\n                                name=\"phone\"\n                                id=\"phone\"\n                                value={quoteState.phone}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Street</label>\n                            <input\n                                label=\"Street\"\n                                type=\"text\"\n                                name=\"street\"\n                                id=\"street\"\n                                value={quoteState.street}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>Suburb</label>\n                            <select\n                                label=\"Suburb\"\n                                name=\"suburb\"\n                                id=\"suburb\"\n                                value={quoteState.suburb}\n                                onChange={handleSuburbChange}>\n                                {suburbs.map((suburb) => <option key={suburb.text} value={suburb.value}>{suburb.value}</option>)}\n                            </select>\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Form.Field>\n                            <label>PostCode</label>\n                            <input\n                                label=\"Postcode\"\n                                type=\"text\"\n                                name=\"postCode\"\n                                id=\"postCode\"\n                                value={quoteState.postCode}\n                                onChange={handleQuoteChange}\n                            />\n                        </Form.Field>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Grid>\n                <Form.Field>\n                <Button\n                        floated=\"left\"\n                        icon\n                        labelPosition=\"left\"\n                        color=\"blue\"\n                        size=\"small\"\n                        //disabled={!selectedId}\n                        onClick={addWindow}>\n                        <Icon name=\"edit\" /> Add Window\n                        </Button>\n                </Form.Field>\n                <Form.Field>\n                    <Input type=\"submit\" value=\"Save Quote\" onClick={onSubmit} />\n                </Form.Field>\n            </Grid>\n            <Grid columns={1}>\n                <Grid.Column>\n                    {\n                        windowState.map((val, idx) => (\n                            <WindowInputs\n                                key={`window-${idx}`}\n                                idx={idx}\n                                windowState={windowState}\n                                handleWindowChange={handleWindowChange}\n                            />\n                        ))\n                    }\n                </Grid.Column>\n            </Grid>\n        </Form >\n    );\n};\n\nexport default QuoteDetail;"]},"metadata":{},"sourceType":"module"}